/*
Edge Event Schemas

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the AeAssetNegotiationNoteAddedDetailNote type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AeAssetNegotiationNoteAddedDetailNote{}

// AeAssetNegotiationNoteAddedDetailNote struct for AeAssetNegotiationNoteAddedDetailNote
type AeAssetNegotiationNoteAddedDetailNote struct {
	// unique identifier of the note
	Id string `json:"id"`
	// User that added the note
	NotedBy string `json:"noted-by"`
	// the time the note was taken
	NotedAt time.Time `json:"noted-at"`
	// the source system that created the note
	Source string `json:"source"`
	Subject string `json:"subject"`
	// The body of the note
	Body string `json:"body"`
	AdditionalProperties map[string]interface{}
}

type _AeAssetNegotiationNoteAddedDetailNote AeAssetNegotiationNoteAddedDetailNote

// NewAeAssetNegotiationNoteAddedDetailNote instantiates a new AeAssetNegotiationNoteAddedDetailNote object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAeAssetNegotiationNoteAddedDetailNote(id string, notedBy string, notedAt time.Time, source string, subject string, body string) *AeAssetNegotiationNoteAddedDetailNote {
	this := AeAssetNegotiationNoteAddedDetailNote{}
	this.Id = id
	this.NotedBy = notedBy
	this.NotedAt = notedAt
	this.Source = source
	this.Subject = subject
	this.Body = body
	return &this
}

// NewAeAssetNegotiationNoteAddedDetailNoteWithDefaults instantiates a new AeAssetNegotiationNoteAddedDetailNote object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAeAssetNegotiationNoteAddedDetailNoteWithDefaults() *AeAssetNegotiationNoteAddedDetailNote {
	this := AeAssetNegotiationNoteAddedDetailNote{}
	return &this
}

// GetId returns the Id field value
func (o *AeAssetNegotiationNoteAddedDetailNote) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationNoteAddedDetailNote) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AeAssetNegotiationNoteAddedDetailNote) SetId(v string) {
	o.Id = v
}

// GetNotedBy returns the NotedBy field value
func (o *AeAssetNegotiationNoteAddedDetailNote) GetNotedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotedBy
}

// GetNotedByOk returns a tuple with the NotedBy field value
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationNoteAddedDetailNote) GetNotedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotedBy, true
}

// SetNotedBy sets field value
func (o *AeAssetNegotiationNoteAddedDetailNote) SetNotedBy(v string) {
	o.NotedBy = v
}

// GetNotedAt returns the NotedAt field value
func (o *AeAssetNegotiationNoteAddedDetailNote) GetNotedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.NotedAt
}

// GetNotedAtOk returns a tuple with the NotedAt field value
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationNoteAddedDetailNote) GetNotedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotedAt, true
}

// SetNotedAt sets field value
func (o *AeAssetNegotiationNoteAddedDetailNote) SetNotedAt(v time.Time) {
	o.NotedAt = v
}

// GetSource returns the Source field value
func (o *AeAssetNegotiationNoteAddedDetailNote) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationNoteAddedDetailNote) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *AeAssetNegotiationNoteAddedDetailNote) SetSource(v string) {
	o.Source = v
}

// GetSubject returns the Subject field value
func (o *AeAssetNegotiationNoteAddedDetailNote) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationNoteAddedDetailNote) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *AeAssetNegotiationNoteAddedDetailNote) SetSubject(v string) {
	o.Subject = v
}

// GetBody returns the Body field value
func (o *AeAssetNegotiationNoteAddedDetailNote) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationNoteAddedDetailNote) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *AeAssetNegotiationNoteAddedDetailNote) SetBody(v string) {
	o.Body = v
}

func (o AeAssetNegotiationNoteAddedDetailNote) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AeAssetNegotiationNoteAddedDetailNote) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["noted-by"] = o.NotedBy
	toSerialize["noted-at"] = o.NotedAt
	toSerialize["source"] = o.Source
	toSerialize["subject"] = o.Subject
	toSerialize["body"] = o.Body

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AeAssetNegotiationNoteAddedDetailNote) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"noted-by",
		"noted-at",
		"source",
		"subject",
		"body",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAeAssetNegotiationNoteAddedDetailNote := _AeAssetNegotiationNoteAddedDetailNote{}

	err = json.Unmarshal(data, &varAeAssetNegotiationNoteAddedDetailNote)

	if err != nil {
		return err
	}

	*o = AeAssetNegotiationNoteAddedDetailNote(varAeAssetNegotiationNoteAddedDetailNote)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "noted-by")
		delete(additionalProperties, "noted-at")
		delete(additionalProperties, "source")
		delete(additionalProperties, "subject")
		delete(additionalProperties, "body")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAeAssetNegotiationNoteAddedDetailNote struct {
	value *AeAssetNegotiationNoteAddedDetailNote
	isSet bool
}

func (v NullableAeAssetNegotiationNoteAddedDetailNote) Get() *AeAssetNegotiationNoteAddedDetailNote {
	return v.value
}

func (v *NullableAeAssetNegotiationNoteAddedDetailNote) Set(val *AeAssetNegotiationNoteAddedDetailNote) {
	v.value = val
	v.isSet = true
}

func (v NullableAeAssetNegotiationNoteAddedDetailNote) IsSet() bool {
	return v.isSet
}

func (v *NullableAeAssetNegotiationNoteAddedDetailNote) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAeAssetNegotiationNoteAddedDetailNote(val *AeAssetNegotiationNoteAddedDetailNote) *NullableAeAssetNegotiationNoteAddedDetailNote {
	return &NullableAeAssetNegotiationNoteAddedDetailNote{value: val, isSet: true}
}

func (v NullableAeAssetNegotiationNoteAddedDetailNote) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAeAssetNegotiationNoteAddedDetailNote) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


