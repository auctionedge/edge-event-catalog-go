/*
Edge Event Schemas

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
	"fmt"
)

// checks if the AeAssetSellerChargeAddRequestedDetailCharge type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AeAssetSellerChargeAddRequestedDetailCharge{}

// AeAssetSellerChargeAddRequestedDetailCharge struct for AeAssetSellerChargeAddRequestedDetailCharge
type AeAssetSellerChargeAddRequestedDetailCharge struct {
	// Description of the charge
	DisplayName string `json:"display-name"`
	// The type of charge that is being requested to be added.
	ChargeType string `json:"charge-type"`
	// Amount to be charged to the seller
	Amount float32 `json:"amount"`
	// Amount of money the auction is out related to the charge.
	Cost *float32 `json:"cost,omitempty"`
	// Notes for the auction relating to the charge
	Note *string `json:"note,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AeAssetSellerChargeAddRequestedDetailCharge AeAssetSellerChargeAddRequestedDetailCharge

// NewAeAssetSellerChargeAddRequestedDetailCharge instantiates a new AeAssetSellerChargeAddRequestedDetailCharge object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAeAssetSellerChargeAddRequestedDetailCharge(displayName string, chargeType string, amount float32) *AeAssetSellerChargeAddRequestedDetailCharge {
	this := AeAssetSellerChargeAddRequestedDetailCharge{}
	this.DisplayName = displayName
	this.ChargeType = chargeType
	this.Amount = amount
	return &this
}

// NewAeAssetSellerChargeAddRequestedDetailChargeWithDefaults instantiates a new AeAssetSellerChargeAddRequestedDetailCharge object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAeAssetSellerChargeAddRequestedDetailChargeWithDefaults() *AeAssetSellerChargeAddRequestedDetailCharge {
	this := AeAssetSellerChargeAddRequestedDetailCharge{}
	return &this
}

// GetDisplayName returns the DisplayName field value
func (o *AeAssetSellerChargeAddRequestedDetailCharge) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *AeAssetSellerChargeAddRequestedDetailCharge) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *AeAssetSellerChargeAddRequestedDetailCharge) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetChargeType returns the ChargeType field value
func (o *AeAssetSellerChargeAddRequestedDetailCharge) GetChargeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChargeType
}

// GetChargeTypeOk returns a tuple with the ChargeType field value
// and a boolean to check if the value has been set.
func (o *AeAssetSellerChargeAddRequestedDetailCharge) GetChargeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChargeType, true
}

// SetChargeType sets field value
func (o *AeAssetSellerChargeAddRequestedDetailCharge) SetChargeType(v string) {
	o.ChargeType = v
}

// GetAmount returns the Amount field value
func (o *AeAssetSellerChargeAddRequestedDetailCharge) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *AeAssetSellerChargeAddRequestedDetailCharge) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *AeAssetSellerChargeAddRequestedDetailCharge) SetAmount(v float32) {
	o.Amount = v
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *AeAssetSellerChargeAddRequestedDetailCharge) GetCost() float32 {
	if o == nil || IsNil(o.Cost) {
		var ret float32
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AeAssetSellerChargeAddRequestedDetailCharge) GetCostOk() (*float32, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *AeAssetSellerChargeAddRequestedDetailCharge) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given float32 and assigns it to the Cost field.
func (o *AeAssetSellerChargeAddRequestedDetailCharge) SetCost(v float32) {
	o.Cost = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *AeAssetSellerChargeAddRequestedDetailCharge) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AeAssetSellerChargeAddRequestedDetailCharge) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *AeAssetSellerChargeAddRequestedDetailCharge) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *AeAssetSellerChargeAddRequestedDetailCharge) SetNote(v string) {
	o.Note = &v
}

func (o AeAssetSellerChargeAddRequestedDetailCharge) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AeAssetSellerChargeAddRequestedDetailCharge) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["display-name"] = o.DisplayName
	toSerialize["charge-type"] = o.ChargeType
	toSerialize["amount"] = o.Amount
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AeAssetSellerChargeAddRequestedDetailCharge) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"display-name",
		"charge-type",
		"amount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAeAssetSellerChargeAddRequestedDetailCharge := _AeAssetSellerChargeAddRequestedDetailCharge{}

	err = json.Unmarshal(data, &varAeAssetSellerChargeAddRequestedDetailCharge)

	if err != nil {
		return err
	}

	*o = AeAssetSellerChargeAddRequestedDetailCharge(varAeAssetSellerChargeAddRequestedDetailCharge)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "display-name")
		delete(additionalProperties, "charge-type")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "cost")
		delete(additionalProperties, "note")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAeAssetSellerChargeAddRequestedDetailCharge struct {
	value *AeAssetSellerChargeAddRequestedDetailCharge
	isSet bool
}

func (v NullableAeAssetSellerChargeAddRequestedDetailCharge) Get() *AeAssetSellerChargeAddRequestedDetailCharge {
	return v.value
}

func (v *NullableAeAssetSellerChargeAddRequestedDetailCharge) Set(val *AeAssetSellerChargeAddRequestedDetailCharge) {
	v.value = val
	v.isSet = true
}

func (v NullableAeAssetSellerChargeAddRequestedDetailCharge) IsSet() bool {
	return v.isSet
}

func (v *NullableAeAssetSellerChargeAddRequestedDetailCharge) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAeAssetSellerChargeAddRequestedDetailCharge(val *AeAssetSellerChargeAddRequestedDetailCharge) *NullableAeAssetSellerChargeAddRequestedDetailCharge {
	return &NullableAeAssetSellerChargeAddRequestedDetailCharge{value: val, isSet: true}
}

func (v NullableAeAssetSellerChargeAddRequestedDetailCharge) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAeAssetSellerChargeAddRequestedDetailCharge) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


