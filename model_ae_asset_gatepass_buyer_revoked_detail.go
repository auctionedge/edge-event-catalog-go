/*
Edge Event Schemas

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the AeAssetGatepassBuyerRevokedDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AeAssetGatepassBuyerRevokedDetail{}

// AeAssetGatepassBuyerRevokedDetail Gate pass eligibility has been revoked
type AeAssetGatepassBuyerRevokedDetail struct {
	// Auction Edge unique identifier for an auction.
	AuctionId string `json:"auction-id"`
	Asset *CommonAmsAssetPointer `json:"asset,omitempty"`
	// Source's unique identifier for asset
	AssetId string `json:"asset-id"`
	// The stock number of the asset.
	AssetStock string `json:"asset-stock"`
	// The account key of an AMS account (i.e. the account or dealer number)
	BuyerAccountKey string `json:"buyer-account-key"`
	// The updated date time of the deal.
	UpdatedAt *time.Time `json:"updated-at,omitempty"`
	Initiator *CommonInitiator `json:"initiator,omitempty"`
}

type _AeAssetGatepassBuyerRevokedDetail AeAssetGatepassBuyerRevokedDetail

// NewAeAssetGatepassBuyerRevokedDetail instantiates a new AeAssetGatepassBuyerRevokedDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAeAssetGatepassBuyerRevokedDetail(auctionId string, assetId string, assetStock string, buyerAccountKey string) *AeAssetGatepassBuyerRevokedDetail {
	this := AeAssetGatepassBuyerRevokedDetail{}
	this.AuctionId = auctionId
	this.AssetId = assetId
	this.AssetStock = assetStock
	this.BuyerAccountKey = buyerAccountKey
	return &this
}

// NewAeAssetGatepassBuyerRevokedDetailWithDefaults instantiates a new AeAssetGatepassBuyerRevokedDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAeAssetGatepassBuyerRevokedDetailWithDefaults() *AeAssetGatepassBuyerRevokedDetail {
	this := AeAssetGatepassBuyerRevokedDetail{}
	return &this
}

// GetAuctionId returns the AuctionId field value
func (o *AeAssetGatepassBuyerRevokedDetail) GetAuctionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuctionId
}

// GetAuctionIdOk returns a tuple with the AuctionId field value
// and a boolean to check if the value has been set.
func (o *AeAssetGatepassBuyerRevokedDetail) GetAuctionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuctionId, true
}

// SetAuctionId sets field value
func (o *AeAssetGatepassBuyerRevokedDetail) SetAuctionId(v string) {
	o.AuctionId = v
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *AeAssetGatepassBuyerRevokedDetail) GetAsset() CommonAmsAssetPointer {
	if o == nil || IsNil(o.Asset) {
		var ret CommonAmsAssetPointer
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AeAssetGatepassBuyerRevokedDetail) GetAssetOk() (*CommonAmsAssetPointer, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *AeAssetGatepassBuyerRevokedDetail) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given CommonAmsAssetPointer and assigns it to the Asset field.
func (o *AeAssetGatepassBuyerRevokedDetail) SetAsset(v CommonAmsAssetPointer) {
	o.Asset = &v
}

// GetAssetId returns the AssetId field value
func (o *AeAssetGatepassBuyerRevokedDetail) GetAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *AeAssetGatepassBuyerRevokedDetail) GetAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *AeAssetGatepassBuyerRevokedDetail) SetAssetId(v string) {
	o.AssetId = v
}

// GetAssetStock returns the AssetStock field value
func (o *AeAssetGatepassBuyerRevokedDetail) GetAssetStock() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetStock
}

// GetAssetStockOk returns a tuple with the AssetStock field value
// and a boolean to check if the value has been set.
func (o *AeAssetGatepassBuyerRevokedDetail) GetAssetStockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetStock, true
}

// SetAssetStock sets field value
func (o *AeAssetGatepassBuyerRevokedDetail) SetAssetStock(v string) {
	o.AssetStock = v
}

// GetBuyerAccountKey returns the BuyerAccountKey field value
func (o *AeAssetGatepassBuyerRevokedDetail) GetBuyerAccountKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BuyerAccountKey
}

// GetBuyerAccountKeyOk returns a tuple with the BuyerAccountKey field value
// and a boolean to check if the value has been set.
func (o *AeAssetGatepassBuyerRevokedDetail) GetBuyerAccountKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BuyerAccountKey, true
}

// SetBuyerAccountKey sets field value
func (o *AeAssetGatepassBuyerRevokedDetail) SetBuyerAccountKey(v string) {
	o.BuyerAccountKey = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AeAssetGatepassBuyerRevokedDetail) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AeAssetGatepassBuyerRevokedDetail) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AeAssetGatepassBuyerRevokedDetail) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *AeAssetGatepassBuyerRevokedDetail) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetInitiator returns the Initiator field value if set, zero value otherwise.
func (o *AeAssetGatepassBuyerRevokedDetail) GetInitiator() CommonInitiator {
	if o == nil || IsNil(o.Initiator) {
		var ret CommonInitiator
		return ret
	}
	return *o.Initiator
}

// GetInitiatorOk returns a tuple with the Initiator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AeAssetGatepassBuyerRevokedDetail) GetInitiatorOk() (*CommonInitiator, bool) {
	if o == nil || IsNil(o.Initiator) {
		return nil, false
	}
	return o.Initiator, true
}

// HasInitiator returns a boolean if a field has been set.
func (o *AeAssetGatepassBuyerRevokedDetail) HasInitiator() bool {
	if o != nil && !IsNil(o.Initiator) {
		return true
	}

	return false
}

// SetInitiator gets a reference to the given CommonInitiator and assigns it to the Initiator field.
func (o *AeAssetGatepassBuyerRevokedDetail) SetInitiator(v CommonInitiator) {
	o.Initiator = &v
}

func (o AeAssetGatepassBuyerRevokedDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AeAssetGatepassBuyerRevokedDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["auction-id"] = o.AuctionId
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	toSerialize["asset-id"] = o.AssetId
	toSerialize["asset-stock"] = o.AssetStock
	toSerialize["buyer-account-key"] = o.BuyerAccountKey
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated-at"] = o.UpdatedAt
	}
	if !IsNil(o.Initiator) {
		toSerialize["initiator"] = o.Initiator
	}
	return toSerialize, nil
}

func (o *AeAssetGatepassBuyerRevokedDetail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"auction-id",
		"asset-id",
		"asset-stock",
		"buyer-account-key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAeAssetGatepassBuyerRevokedDetail := _AeAssetGatepassBuyerRevokedDetail{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAeAssetGatepassBuyerRevokedDetail)

	if err != nil {
		return err
	}

	*o = AeAssetGatepassBuyerRevokedDetail(varAeAssetGatepassBuyerRevokedDetail)

	return err
}

type NullableAeAssetGatepassBuyerRevokedDetail struct {
	value *AeAssetGatepassBuyerRevokedDetail
	isSet bool
}

func (v NullableAeAssetGatepassBuyerRevokedDetail) Get() *AeAssetGatepassBuyerRevokedDetail {
	return v.value
}

func (v *NullableAeAssetGatepassBuyerRevokedDetail) Set(val *AeAssetGatepassBuyerRevokedDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableAeAssetGatepassBuyerRevokedDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableAeAssetGatepassBuyerRevokedDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAeAssetGatepassBuyerRevokedDetail(val *AeAssetGatepassBuyerRevokedDetail) *NullableAeAssetGatepassBuyerRevokedDetail {
	return &NullableAeAssetGatepassBuyerRevokedDetail{value: val, isSet: true}
}

func (v NullableAeAssetGatepassBuyerRevokedDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAeAssetGatepassBuyerRevokedDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


