/*
Edge Event Schemas

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
	"fmt"
)

// checks if the CommonAmsRepPointer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonAmsRepPointer{}

// CommonAmsRepPointer Identifiers that reference an AMS rep account.  This may not be the one that you want, please reference common.ams.representative-pointer
type CommonAmsRepPointer struct {
	// The rep id an AMS account.  This common object is deprecated, please use common.ams.representative-id instead.
	// Deprecated
	RepId NullableString `json:"rep-id"`
	// The Auction Access ID of the AMS Representative account.
	AaId NullableString `json:"aa-id"`
	AdditionalProperties map[string]interface{}
}

type _CommonAmsRepPointer CommonAmsRepPointer

// NewCommonAmsRepPointer instantiates a new CommonAmsRepPointer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonAmsRepPointer(repId NullableString, aaId NullableString) *CommonAmsRepPointer {
	this := CommonAmsRepPointer{}
	this.RepId = repId
	this.AaId = aaId
	return &this
}

// NewCommonAmsRepPointerWithDefaults instantiates a new CommonAmsRepPointer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonAmsRepPointerWithDefaults() *CommonAmsRepPointer {
	this := CommonAmsRepPointer{}
	return &this
}

// GetRepId returns the RepId field value
// If the value is explicit nil, the zero value for string will be returned
// Deprecated
func (o *CommonAmsRepPointer) GetRepId() string {
	if o == nil || o.RepId.Get() == nil {
		var ret string
		return ret
	}

	return *o.RepId.Get()
}

// GetRepIdOk returns a tuple with the RepId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *CommonAmsRepPointer) GetRepIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RepId.Get(), o.RepId.IsSet()
}

// SetRepId sets field value
// Deprecated
func (o *CommonAmsRepPointer) SetRepId(v string) {
	o.RepId.Set(&v)
}

// GetAaId returns the AaId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CommonAmsRepPointer) GetAaId() string {
	if o == nil || o.AaId.Get() == nil {
		var ret string
		return ret
	}

	return *o.AaId.Get()
}

// GetAaIdOk returns a tuple with the AaId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonAmsRepPointer) GetAaIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AaId.Get(), o.AaId.IsSet()
}

// SetAaId sets field value
func (o *CommonAmsRepPointer) SetAaId(v string) {
	o.AaId.Set(&v)
}

func (o CommonAmsRepPointer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonAmsRepPointer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rep-id"] = o.RepId.Get()
	toSerialize["aa-id"] = o.AaId.Get()

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonAmsRepPointer) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rep-id",
		"aa-id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCommonAmsRepPointer := _CommonAmsRepPointer{}

	err = json.Unmarshal(data, &varCommonAmsRepPointer)

	if err != nil {
		return err
	}

	*o = CommonAmsRepPointer(varCommonAmsRepPointer)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "rep-id")
		delete(additionalProperties, "aa-id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonAmsRepPointer struct {
	value *CommonAmsRepPointer
	isSet bool
}

func (v NullableCommonAmsRepPointer) Get() *CommonAmsRepPointer {
	return v.value
}

func (v *NullableCommonAmsRepPointer) Set(val *CommonAmsRepPointer) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonAmsRepPointer) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonAmsRepPointer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonAmsRepPointer(val *CommonAmsRepPointer) *NullableCommonAmsRepPointer {
	return &NullableCommonAmsRepPointer{value: val, isSet: true}
}

func (v NullableCommonAmsRepPointer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonAmsRepPointer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


