/*
Edge Event Schemas

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AeAccountPaymentSourceUpsertAmsDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AeAccountPaymentSourceUpsertAmsDetail{}

// AeAccountPaymentSourceUpsertAmsDetail A payment source has been inserted or updated in the AMS
type AeAccountPaymentSourceUpsertAmsDetail struct {
	// Auction Edge unique identifier for an auction.
	AuctionId string `json:"auction-id"`
	Account CommonAmsAccountPointer `json:"account"`
	// display name of the account's payment source
	DisplayName string `json:"display-name"`
	// auction unique id for payment source in AMS
	PaymentSourceId string `json:"payment-source-id"`
	// auction unique id for payment vendor in AMS
	PaymentVendorId string `json:"payment-vendor-id"`
	Initiator *CommonInitiator `json:"initiator,omitempty"`
}

type _AeAccountPaymentSourceUpsertAmsDetail AeAccountPaymentSourceUpsertAmsDetail

// NewAeAccountPaymentSourceUpsertAmsDetail instantiates a new AeAccountPaymentSourceUpsertAmsDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAeAccountPaymentSourceUpsertAmsDetail(auctionId string, account CommonAmsAccountPointer, displayName string, paymentSourceId string, paymentVendorId string) *AeAccountPaymentSourceUpsertAmsDetail {
	this := AeAccountPaymentSourceUpsertAmsDetail{}
	this.AuctionId = auctionId
	this.Account = account
	this.DisplayName = displayName
	this.PaymentSourceId = paymentSourceId
	this.PaymentVendorId = paymentVendorId
	return &this
}

// NewAeAccountPaymentSourceUpsertAmsDetailWithDefaults instantiates a new AeAccountPaymentSourceUpsertAmsDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAeAccountPaymentSourceUpsertAmsDetailWithDefaults() *AeAccountPaymentSourceUpsertAmsDetail {
	this := AeAccountPaymentSourceUpsertAmsDetail{}
	return &this
}

// GetAuctionId returns the AuctionId field value
func (o *AeAccountPaymentSourceUpsertAmsDetail) GetAuctionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuctionId
}

// GetAuctionIdOk returns a tuple with the AuctionId field value
// and a boolean to check if the value has been set.
func (o *AeAccountPaymentSourceUpsertAmsDetail) GetAuctionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuctionId, true
}

// SetAuctionId sets field value
func (o *AeAccountPaymentSourceUpsertAmsDetail) SetAuctionId(v string) {
	o.AuctionId = v
}

// GetAccount returns the Account field value
func (o *AeAccountPaymentSourceUpsertAmsDetail) GetAccount() CommonAmsAccountPointer {
	if o == nil {
		var ret CommonAmsAccountPointer
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *AeAccountPaymentSourceUpsertAmsDetail) GetAccountOk() (*CommonAmsAccountPointer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *AeAccountPaymentSourceUpsertAmsDetail) SetAccount(v CommonAmsAccountPointer) {
	o.Account = v
}

// GetDisplayName returns the DisplayName field value
func (o *AeAccountPaymentSourceUpsertAmsDetail) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *AeAccountPaymentSourceUpsertAmsDetail) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *AeAccountPaymentSourceUpsertAmsDetail) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetPaymentSourceId returns the PaymentSourceId field value
func (o *AeAccountPaymentSourceUpsertAmsDetail) GetPaymentSourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentSourceId
}

// GetPaymentSourceIdOk returns a tuple with the PaymentSourceId field value
// and a boolean to check if the value has been set.
func (o *AeAccountPaymentSourceUpsertAmsDetail) GetPaymentSourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentSourceId, true
}

// SetPaymentSourceId sets field value
func (o *AeAccountPaymentSourceUpsertAmsDetail) SetPaymentSourceId(v string) {
	o.PaymentSourceId = v
}

// GetPaymentVendorId returns the PaymentVendorId field value
func (o *AeAccountPaymentSourceUpsertAmsDetail) GetPaymentVendorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentVendorId
}

// GetPaymentVendorIdOk returns a tuple with the PaymentVendorId field value
// and a boolean to check if the value has been set.
func (o *AeAccountPaymentSourceUpsertAmsDetail) GetPaymentVendorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentVendorId, true
}

// SetPaymentVendorId sets field value
func (o *AeAccountPaymentSourceUpsertAmsDetail) SetPaymentVendorId(v string) {
	o.PaymentVendorId = v
}

// GetInitiator returns the Initiator field value if set, zero value otherwise.
func (o *AeAccountPaymentSourceUpsertAmsDetail) GetInitiator() CommonInitiator {
	if o == nil || IsNil(o.Initiator) {
		var ret CommonInitiator
		return ret
	}
	return *o.Initiator
}

// GetInitiatorOk returns a tuple with the Initiator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AeAccountPaymentSourceUpsertAmsDetail) GetInitiatorOk() (*CommonInitiator, bool) {
	if o == nil || IsNil(o.Initiator) {
		return nil, false
	}
	return o.Initiator, true
}

// HasInitiator returns a boolean if a field has been set.
func (o *AeAccountPaymentSourceUpsertAmsDetail) HasInitiator() bool {
	if o != nil && !IsNil(o.Initiator) {
		return true
	}

	return false
}

// SetInitiator gets a reference to the given CommonInitiator and assigns it to the Initiator field.
func (o *AeAccountPaymentSourceUpsertAmsDetail) SetInitiator(v CommonInitiator) {
	o.Initiator = &v
}

func (o AeAccountPaymentSourceUpsertAmsDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AeAccountPaymentSourceUpsertAmsDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["auction-id"] = o.AuctionId
	toSerialize["account"] = o.Account
	toSerialize["display-name"] = o.DisplayName
	toSerialize["payment-source-id"] = o.PaymentSourceId
	toSerialize["payment-vendor-id"] = o.PaymentVendorId
	if !IsNil(o.Initiator) {
		toSerialize["initiator"] = o.Initiator
	}
	return toSerialize, nil
}

func (o *AeAccountPaymentSourceUpsertAmsDetail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"auction-id",
		"account",
		"display-name",
		"payment-source-id",
		"payment-vendor-id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAeAccountPaymentSourceUpsertAmsDetail := _AeAccountPaymentSourceUpsertAmsDetail{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAeAccountPaymentSourceUpsertAmsDetail)

	if err != nil {
		return err
	}

	*o = AeAccountPaymentSourceUpsertAmsDetail(varAeAccountPaymentSourceUpsertAmsDetail)

	return err
}

type NullableAeAccountPaymentSourceUpsertAmsDetail struct {
	value *AeAccountPaymentSourceUpsertAmsDetail
	isSet bool
}

func (v NullableAeAccountPaymentSourceUpsertAmsDetail) Get() *AeAccountPaymentSourceUpsertAmsDetail {
	return v.value
}

func (v *NullableAeAccountPaymentSourceUpsertAmsDetail) Set(val *AeAccountPaymentSourceUpsertAmsDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableAeAccountPaymentSourceUpsertAmsDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableAeAccountPaymentSourceUpsertAmsDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAeAccountPaymentSourceUpsertAmsDetail(val *AeAccountPaymentSourceUpsertAmsDetail) *NullableAeAccountPaymentSourceUpsertAmsDetail {
	return &NullableAeAccountPaymentSourceUpsertAmsDetail{value: val, isSet: true}
}

func (v NullableAeAccountPaymentSourceUpsertAmsDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAeAccountPaymentSourceUpsertAmsDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


