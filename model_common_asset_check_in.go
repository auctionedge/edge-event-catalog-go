/*
Edge Event Schemas

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CommonAssetCheckIn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonAssetCheckIn{}

// CommonAssetCheckIn struct for CommonAssetCheckIn
type CommonAssetCheckIn struct {
	// Date and time that the Asset first got a stock number in the AMS.
	RecordedAt time.Time `json:"recorded-at"`
	// The user responsible for checking in the asset.
	RecordedBy *string `json:"recorded-by,omitempty"`
}

type _CommonAssetCheckIn CommonAssetCheckIn

// NewCommonAssetCheckIn instantiates a new CommonAssetCheckIn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonAssetCheckIn(recordedAt time.Time) *CommonAssetCheckIn {
	this := CommonAssetCheckIn{}
	this.RecordedAt = recordedAt
	return &this
}

// NewCommonAssetCheckInWithDefaults instantiates a new CommonAssetCheckIn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonAssetCheckInWithDefaults() *CommonAssetCheckIn {
	this := CommonAssetCheckIn{}
	return &this
}

// GetRecordedAt returns the RecordedAt field value
func (o *CommonAssetCheckIn) GetRecordedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.RecordedAt
}

// GetRecordedAtOk returns a tuple with the RecordedAt field value
// and a boolean to check if the value has been set.
func (o *CommonAssetCheckIn) GetRecordedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecordedAt, true
}

// SetRecordedAt sets field value
func (o *CommonAssetCheckIn) SetRecordedAt(v time.Time) {
	o.RecordedAt = v
}

// GetRecordedBy returns the RecordedBy field value if set, zero value otherwise.
func (o *CommonAssetCheckIn) GetRecordedBy() string {
	if o == nil || IsNil(o.RecordedBy) {
		var ret string
		return ret
	}
	return *o.RecordedBy
}

// GetRecordedByOk returns a tuple with the RecordedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonAssetCheckIn) GetRecordedByOk() (*string, bool) {
	if o == nil || IsNil(o.RecordedBy) {
		return nil, false
	}
	return o.RecordedBy, true
}

// HasRecordedBy returns a boolean if a field has been set.
func (o *CommonAssetCheckIn) HasRecordedBy() bool {
	if o != nil && !IsNil(o.RecordedBy) {
		return true
	}

	return false
}

// SetRecordedBy gets a reference to the given string and assigns it to the RecordedBy field.
func (o *CommonAssetCheckIn) SetRecordedBy(v string) {
	o.RecordedBy = &v
}

func (o CommonAssetCheckIn) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonAssetCheckIn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["recorded-at"] = o.RecordedAt
	if !IsNil(o.RecordedBy) {
		toSerialize["recorded-by"] = o.RecordedBy
	}
	return toSerialize, nil
}

func (o *CommonAssetCheckIn) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"recorded-at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCommonAssetCheckIn := _CommonAssetCheckIn{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCommonAssetCheckIn)

	if err != nil {
		return err
	}

	*o = CommonAssetCheckIn(varCommonAssetCheckIn)

	return err
}

type NullableCommonAssetCheckIn struct {
	value *CommonAssetCheckIn
	isSet bool
}

func (v NullableCommonAssetCheckIn) Get() *CommonAssetCheckIn {
	return v.value
}

func (v *NullableCommonAssetCheckIn) Set(val *CommonAssetCheckIn) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonAssetCheckIn) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonAssetCheckIn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonAssetCheckIn(val *CommonAssetCheckIn) *NullableCommonAssetCheckIn {
	return &NullableCommonAssetCheckIn{value: val, isSet: true}
}

func (v NullableCommonAssetCheckIn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonAssetCheckIn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


