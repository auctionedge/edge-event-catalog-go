/*
Edge Event Schemas

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AeAmsPaymentVendorUpsertDetailTransactionFee type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AeAmsPaymentVendorUpsertDetailTransactionFee{}

// AeAmsPaymentVendorUpsertDetailTransactionFee Amount to be charged when payment is made using vendor
type AeAmsPaymentVendorUpsertDetailTransactionFee struct {
	FlatRate float32 `json:"flat-rate"`
	PercentageOfTotal float32 `json:"percentage-of-total"`
}

type _AeAmsPaymentVendorUpsertDetailTransactionFee AeAmsPaymentVendorUpsertDetailTransactionFee

// NewAeAmsPaymentVendorUpsertDetailTransactionFee instantiates a new AeAmsPaymentVendorUpsertDetailTransactionFee object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAeAmsPaymentVendorUpsertDetailTransactionFee(flatRate float32, percentageOfTotal float32) *AeAmsPaymentVendorUpsertDetailTransactionFee {
	this := AeAmsPaymentVendorUpsertDetailTransactionFee{}
	this.FlatRate = flatRate
	this.PercentageOfTotal = percentageOfTotal
	return &this
}

// NewAeAmsPaymentVendorUpsertDetailTransactionFeeWithDefaults instantiates a new AeAmsPaymentVendorUpsertDetailTransactionFee object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAeAmsPaymentVendorUpsertDetailTransactionFeeWithDefaults() *AeAmsPaymentVendorUpsertDetailTransactionFee {
	this := AeAmsPaymentVendorUpsertDetailTransactionFee{}
	return &this
}

// GetFlatRate returns the FlatRate field value
func (o *AeAmsPaymentVendorUpsertDetailTransactionFee) GetFlatRate() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FlatRate
}

// GetFlatRateOk returns a tuple with the FlatRate field value
// and a boolean to check if the value has been set.
func (o *AeAmsPaymentVendorUpsertDetailTransactionFee) GetFlatRateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlatRate, true
}

// SetFlatRate sets field value
func (o *AeAmsPaymentVendorUpsertDetailTransactionFee) SetFlatRate(v float32) {
	o.FlatRate = v
}

// GetPercentageOfTotal returns the PercentageOfTotal field value
func (o *AeAmsPaymentVendorUpsertDetailTransactionFee) GetPercentageOfTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PercentageOfTotal
}

// GetPercentageOfTotalOk returns a tuple with the PercentageOfTotal field value
// and a boolean to check if the value has been set.
func (o *AeAmsPaymentVendorUpsertDetailTransactionFee) GetPercentageOfTotalOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PercentageOfTotal, true
}

// SetPercentageOfTotal sets field value
func (o *AeAmsPaymentVendorUpsertDetailTransactionFee) SetPercentageOfTotal(v float32) {
	o.PercentageOfTotal = v
}

func (o AeAmsPaymentVendorUpsertDetailTransactionFee) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AeAmsPaymentVendorUpsertDetailTransactionFee) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["flat-rate"] = o.FlatRate
	toSerialize["percentage-of-total"] = o.PercentageOfTotal
	return toSerialize, nil
}

func (o *AeAmsPaymentVendorUpsertDetailTransactionFee) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"flat-rate",
		"percentage-of-total",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAeAmsPaymentVendorUpsertDetailTransactionFee := _AeAmsPaymentVendorUpsertDetailTransactionFee{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAeAmsPaymentVendorUpsertDetailTransactionFee)

	if err != nil {
		return err
	}

	*o = AeAmsPaymentVendorUpsertDetailTransactionFee(varAeAmsPaymentVendorUpsertDetailTransactionFee)

	return err
}

type NullableAeAmsPaymentVendorUpsertDetailTransactionFee struct {
	value *AeAmsPaymentVendorUpsertDetailTransactionFee
	isSet bool
}

func (v NullableAeAmsPaymentVendorUpsertDetailTransactionFee) Get() *AeAmsPaymentVendorUpsertDetailTransactionFee {
	return v.value
}

func (v *NullableAeAmsPaymentVendorUpsertDetailTransactionFee) Set(val *AeAmsPaymentVendorUpsertDetailTransactionFee) {
	v.value = val
	v.isSet = true
}

func (v NullableAeAmsPaymentVendorUpsertDetailTransactionFee) IsSet() bool {
	return v.isSet
}

func (v *NullableAeAmsPaymentVendorUpsertDetailTransactionFee) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAeAmsPaymentVendorUpsertDetailTransactionFee(val *AeAmsPaymentVendorUpsertDetailTransactionFee) *NullableAeAmsPaymentVendorUpsertDetailTransactionFee {
	return &NullableAeAmsPaymentVendorUpsertDetailTransactionFee{value: val, isSet: true}
}

func (v NullableAeAmsPaymentVendorUpsertDetailTransactionFee) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAeAmsPaymentVendorUpsertDetailTransactionFee) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


