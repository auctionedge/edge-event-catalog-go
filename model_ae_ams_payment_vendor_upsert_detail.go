/*
Edge Event Schemas

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AeAmsPaymentVendorUpsertDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AeAmsPaymentVendorUpsertDetail{}

// AeAmsPaymentVendorUpsertDetail Information about payment vendor accepted by auction
type AeAmsPaymentVendorUpsertDetail struct {
	// Auction Edge unique identifier for an auction.
	AuctionId string `json:"auction-id"`
	// auction unique id for payment vendor in AMS
	PaymentVendorId string `json:"payment-vendor-id"`
	// display name of the payment vendor
	DisplayName string `json:"display-name"`
	// AuctionACCESS id for the vendor payment is made with.
	AuctionAccessId NullableString `json:"auction-access-id,omitempty"`
	VendorType string `json:"vendor-type"`
	TransactionFee AeAmsPaymentVendorUpsertDetailTransactionFee `json:"transaction-fee"`
	Initiator *CommonInitiator `json:"initiator,omitempty"`
}

type _AeAmsPaymentVendorUpsertDetail AeAmsPaymentVendorUpsertDetail

// NewAeAmsPaymentVendorUpsertDetail instantiates a new AeAmsPaymentVendorUpsertDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAeAmsPaymentVendorUpsertDetail(auctionId string, paymentVendorId string, displayName string, vendorType string, transactionFee AeAmsPaymentVendorUpsertDetailTransactionFee) *AeAmsPaymentVendorUpsertDetail {
	this := AeAmsPaymentVendorUpsertDetail{}
	this.AuctionId = auctionId
	this.PaymentVendorId = paymentVendorId
	this.DisplayName = displayName
	this.VendorType = vendorType
	this.TransactionFee = transactionFee
	return &this
}

// NewAeAmsPaymentVendorUpsertDetailWithDefaults instantiates a new AeAmsPaymentVendorUpsertDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAeAmsPaymentVendorUpsertDetailWithDefaults() *AeAmsPaymentVendorUpsertDetail {
	this := AeAmsPaymentVendorUpsertDetail{}
	return &this
}

// GetAuctionId returns the AuctionId field value
func (o *AeAmsPaymentVendorUpsertDetail) GetAuctionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuctionId
}

// GetAuctionIdOk returns a tuple with the AuctionId field value
// and a boolean to check if the value has been set.
func (o *AeAmsPaymentVendorUpsertDetail) GetAuctionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuctionId, true
}

// SetAuctionId sets field value
func (o *AeAmsPaymentVendorUpsertDetail) SetAuctionId(v string) {
	o.AuctionId = v
}

// GetPaymentVendorId returns the PaymentVendorId field value
func (o *AeAmsPaymentVendorUpsertDetail) GetPaymentVendorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentVendorId
}

// GetPaymentVendorIdOk returns a tuple with the PaymentVendorId field value
// and a boolean to check if the value has been set.
func (o *AeAmsPaymentVendorUpsertDetail) GetPaymentVendorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentVendorId, true
}

// SetPaymentVendorId sets field value
func (o *AeAmsPaymentVendorUpsertDetail) SetPaymentVendorId(v string) {
	o.PaymentVendorId = v
}

// GetDisplayName returns the DisplayName field value
func (o *AeAmsPaymentVendorUpsertDetail) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *AeAmsPaymentVendorUpsertDetail) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *AeAmsPaymentVendorUpsertDetail) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetAuctionAccessId returns the AuctionAccessId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AeAmsPaymentVendorUpsertDetail) GetAuctionAccessId() string {
	if o == nil || IsNil(o.AuctionAccessId.Get()) {
		var ret string
		return ret
	}
	return *o.AuctionAccessId.Get()
}

// GetAuctionAccessIdOk returns a tuple with the AuctionAccessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AeAmsPaymentVendorUpsertDetail) GetAuctionAccessIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuctionAccessId.Get(), o.AuctionAccessId.IsSet()
}

// HasAuctionAccessId returns a boolean if a field has been set.
func (o *AeAmsPaymentVendorUpsertDetail) HasAuctionAccessId() bool {
	if o != nil && o.AuctionAccessId.IsSet() {
		return true
	}

	return false
}

// SetAuctionAccessId gets a reference to the given NullableString and assigns it to the AuctionAccessId field.
func (o *AeAmsPaymentVendorUpsertDetail) SetAuctionAccessId(v string) {
	o.AuctionAccessId.Set(&v)
}
// SetAuctionAccessIdNil sets the value for AuctionAccessId to be an explicit nil
func (o *AeAmsPaymentVendorUpsertDetail) SetAuctionAccessIdNil() {
	o.AuctionAccessId.Set(nil)
}

// UnsetAuctionAccessId ensures that no value is present for AuctionAccessId, not even an explicit nil
func (o *AeAmsPaymentVendorUpsertDetail) UnsetAuctionAccessId() {
	o.AuctionAccessId.Unset()
}

// GetVendorType returns the VendorType field value
func (o *AeAmsPaymentVendorUpsertDetail) GetVendorType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VendorType
}

// GetVendorTypeOk returns a tuple with the VendorType field value
// and a boolean to check if the value has been set.
func (o *AeAmsPaymentVendorUpsertDetail) GetVendorTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VendorType, true
}

// SetVendorType sets field value
func (o *AeAmsPaymentVendorUpsertDetail) SetVendorType(v string) {
	o.VendorType = v
}

// GetTransactionFee returns the TransactionFee field value
func (o *AeAmsPaymentVendorUpsertDetail) GetTransactionFee() AeAmsPaymentVendorUpsertDetailTransactionFee {
	if o == nil {
		var ret AeAmsPaymentVendorUpsertDetailTransactionFee
		return ret
	}

	return o.TransactionFee
}

// GetTransactionFeeOk returns a tuple with the TransactionFee field value
// and a boolean to check if the value has been set.
func (o *AeAmsPaymentVendorUpsertDetail) GetTransactionFeeOk() (*AeAmsPaymentVendorUpsertDetailTransactionFee, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionFee, true
}

// SetTransactionFee sets field value
func (o *AeAmsPaymentVendorUpsertDetail) SetTransactionFee(v AeAmsPaymentVendorUpsertDetailTransactionFee) {
	o.TransactionFee = v
}

// GetInitiator returns the Initiator field value if set, zero value otherwise.
func (o *AeAmsPaymentVendorUpsertDetail) GetInitiator() CommonInitiator {
	if o == nil || IsNil(o.Initiator) {
		var ret CommonInitiator
		return ret
	}
	return *o.Initiator
}

// GetInitiatorOk returns a tuple with the Initiator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AeAmsPaymentVendorUpsertDetail) GetInitiatorOk() (*CommonInitiator, bool) {
	if o == nil || IsNil(o.Initiator) {
		return nil, false
	}
	return o.Initiator, true
}

// HasInitiator returns a boolean if a field has been set.
func (o *AeAmsPaymentVendorUpsertDetail) HasInitiator() bool {
	if o != nil && !IsNil(o.Initiator) {
		return true
	}

	return false
}

// SetInitiator gets a reference to the given CommonInitiator and assigns it to the Initiator field.
func (o *AeAmsPaymentVendorUpsertDetail) SetInitiator(v CommonInitiator) {
	o.Initiator = &v
}

func (o AeAmsPaymentVendorUpsertDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AeAmsPaymentVendorUpsertDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["auction-id"] = o.AuctionId
	toSerialize["payment-vendor-id"] = o.PaymentVendorId
	toSerialize["display-name"] = o.DisplayName
	if o.AuctionAccessId.IsSet() {
		toSerialize["auction-access-id"] = o.AuctionAccessId.Get()
	}
	toSerialize["vendor-type"] = o.VendorType
	toSerialize["transaction-fee"] = o.TransactionFee
	if !IsNil(o.Initiator) {
		toSerialize["initiator"] = o.Initiator
	}
	return toSerialize, nil
}

func (o *AeAmsPaymentVendorUpsertDetail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"auction-id",
		"payment-vendor-id",
		"display-name",
		"vendor-type",
		"transaction-fee",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAeAmsPaymentVendorUpsertDetail := _AeAmsPaymentVendorUpsertDetail{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAeAmsPaymentVendorUpsertDetail)

	if err != nil {
		return err
	}

	*o = AeAmsPaymentVendorUpsertDetail(varAeAmsPaymentVendorUpsertDetail)

	return err
}

type NullableAeAmsPaymentVendorUpsertDetail struct {
	value *AeAmsPaymentVendorUpsertDetail
	isSet bool
}

func (v NullableAeAmsPaymentVendorUpsertDetail) Get() *AeAmsPaymentVendorUpsertDetail {
	return v.value
}

func (v *NullableAeAmsPaymentVendorUpsertDetail) Set(val *AeAmsPaymentVendorUpsertDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableAeAmsPaymentVendorUpsertDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableAeAmsPaymentVendorUpsertDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAeAmsPaymentVendorUpsertDetail(val *AeAmsPaymentVendorUpsertDetail) *NullableAeAmsPaymentVendorUpsertDetail {
	return &NullableAeAmsPaymentVendorUpsertDetail{value: val, isSet: true}
}

func (v NullableAeAmsPaymentVendorUpsertDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAeAmsPaymentVendorUpsertDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


