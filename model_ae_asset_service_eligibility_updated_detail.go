/*
Edge Event Schemas

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the AeAssetServiceEligibilityUpdatedDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AeAssetServiceEligibilityUpdatedDetail{}

// AeAssetServiceEligibilityUpdatedDetail Service options eligibility and ineligibility list
type AeAssetServiceEligibilityUpdatedDetail struct {
	// Auction Edge unique identifier for an auction.
	AuctionId string `json:"auction-id"`
	Asset CommonAmsAssetPointer `json:"asset"`
	EligibleServices []Service `json:"eligible-services,omitempty"`
	IneligibleServices []Service `json:"ineligible-services,omitempty"`
	// The updated date time of the gatepass status
	UpdatedAt time.Time `json:"updated-at"`
	Initiator CommonInitiator `json:"initiator"`
}

type _AeAssetServiceEligibilityUpdatedDetail AeAssetServiceEligibilityUpdatedDetail

// NewAeAssetServiceEligibilityUpdatedDetail instantiates a new AeAssetServiceEligibilityUpdatedDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAeAssetServiceEligibilityUpdatedDetail(auctionId string, asset CommonAmsAssetPointer, updatedAt time.Time, initiator CommonInitiator) *AeAssetServiceEligibilityUpdatedDetail {
	this := AeAssetServiceEligibilityUpdatedDetail{}
	this.AuctionId = auctionId
	this.Asset = asset
	this.UpdatedAt = updatedAt
	this.Initiator = initiator
	return &this
}

// NewAeAssetServiceEligibilityUpdatedDetailWithDefaults instantiates a new AeAssetServiceEligibilityUpdatedDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAeAssetServiceEligibilityUpdatedDetailWithDefaults() *AeAssetServiceEligibilityUpdatedDetail {
	this := AeAssetServiceEligibilityUpdatedDetail{}
	return &this
}

// GetAuctionId returns the AuctionId field value
func (o *AeAssetServiceEligibilityUpdatedDetail) GetAuctionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuctionId
}

// GetAuctionIdOk returns a tuple with the AuctionId field value
// and a boolean to check if the value has been set.
func (o *AeAssetServiceEligibilityUpdatedDetail) GetAuctionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuctionId, true
}

// SetAuctionId sets field value
func (o *AeAssetServiceEligibilityUpdatedDetail) SetAuctionId(v string) {
	o.AuctionId = v
}

// GetAsset returns the Asset field value
func (o *AeAssetServiceEligibilityUpdatedDetail) GetAsset() CommonAmsAssetPointer {
	if o == nil {
		var ret CommonAmsAssetPointer
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *AeAssetServiceEligibilityUpdatedDetail) GetAssetOk() (*CommonAmsAssetPointer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *AeAssetServiceEligibilityUpdatedDetail) SetAsset(v CommonAmsAssetPointer) {
	o.Asset = v
}

// GetEligibleServices returns the EligibleServices field value if set, zero value otherwise.
func (o *AeAssetServiceEligibilityUpdatedDetail) GetEligibleServices() []Service {
	if o == nil || IsNil(o.EligibleServices) {
		var ret []Service
		return ret
	}
	return o.EligibleServices
}

// GetEligibleServicesOk returns a tuple with the EligibleServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AeAssetServiceEligibilityUpdatedDetail) GetEligibleServicesOk() ([]Service, bool) {
	if o == nil || IsNil(o.EligibleServices) {
		return nil, false
	}
	return o.EligibleServices, true
}

// HasEligibleServices returns a boolean if a field has been set.
func (o *AeAssetServiceEligibilityUpdatedDetail) HasEligibleServices() bool {
	if o != nil && !IsNil(o.EligibleServices) {
		return true
	}

	return false
}

// SetEligibleServices gets a reference to the given []Service and assigns it to the EligibleServices field.
func (o *AeAssetServiceEligibilityUpdatedDetail) SetEligibleServices(v []Service) {
	o.EligibleServices = v
}

// GetIneligibleServices returns the IneligibleServices field value if set, zero value otherwise.
func (o *AeAssetServiceEligibilityUpdatedDetail) GetIneligibleServices() []Service {
	if o == nil || IsNil(o.IneligibleServices) {
		var ret []Service
		return ret
	}
	return o.IneligibleServices
}

// GetIneligibleServicesOk returns a tuple with the IneligibleServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AeAssetServiceEligibilityUpdatedDetail) GetIneligibleServicesOk() ([]Service, bool) {
	if o == nil || IsNil(o.IneligibleServices) {
		return nil, false
	}
	return o.IneligibleServices, true
}

// HasIneligibleServices returns a boolean if a field has been set.
func (o *AeAssetServiceEligibilityUpdatedDetail) HasIneligibleServices() bool {
	if o != nil && !IsNil(o.IneligibleServices) {
		return true
	}

	return false
}

// SetIneligibleServices gets a reference to the given []Service and assigns it to the IneligibleServices field.
func (o *AeAssetServiceEligibilityUpdatedDetail) SetIneligibleServices(v []Service) {
	o.IneligibleServices = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *AeAssetServiceEligibilityUpdatedDetail) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *AeAssetServiceEligibilityUpdatedDetail) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *AeAssetServiceEligibilityUpdatedDetail) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetInitiator returns the Initiator field value
func (o *AeAssetServiceEligibilityUpdatedDetail) GetInitiator() CommonInitiator {
	if o == nil {
		var ret CommonInitiator
		return ret
	}

	return o.Initiator
}

// GetInitiatorOk returns a tuple with the Initiator field value
// and a boolean to check if the value has been set.
func (o *AeAssetServiceEligibilityUpdatedDetail) GetInitiatorOk() (*CommonInitiator, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Initiator, true
}

// SetInitiator sets field value
func (o *AeAssetServiceEligibilityUpdatedDetail) SetInitiator(v CommonInitiator) {
	o.Initiator = v
}

func (o AeAssetServiceEligibilityUpdatedDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AeAssetServiceEligibilityUpdatedDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["auction-id"] = o.AuctionId
	toSerialize["asset"] = o.Asset
	if !IsNil(o.EligibleServices) {
		toSerialize["eligible-services"] = o.EligibleServices
	}
	if !IsNil(o.IneligibleServices) {
		toSerialize["ineligible-services"] = o.IneligibleServices
	}
	toSerialize["updated-at"] = o.UpdatedAt
	toSerialize["initiator"] = o.Initiator
	return toSerialize, nil
}

func (o *AeAssetServiceEligibilityUpdatedDetail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"auction-id",
		"asset",
		"updated-at",
		"initiator",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAeAssetServiceEligibilityUpdatedDetail := _AeAssetServiceEligibilityUpdatedDetail{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAeAssetServiceEligibilityUpdatedDetail)

	if err != nil {
		return err
	}

	*o = AeAssetServiceEligibilityUpdatedDetail(varAeAssetServiceEligibilityUpdatedDetail)

	return err
}

type NullableAeAssetServiceEligibilityUpdatedDetail struct {
	value *AeAssetServiceEligibilityUpdatedDetail
	isSet bool
}

func (v NullableAeAssetServiceEligibilityUpdatedDetail) Get() *AeAssetServiceEligibilityUpdatedDetail {
	return v.value
}

func (v *NullableAeAssetServiceEligibilityUpdatedDetail) Set(val *AeAssetServiceEligibilityUpdatedDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableAeAssetServiceEligibilityUpdatedDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableAeAssetServiceEligibilityUpdatedDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAeAssetServiceEligibilityUpdatedDetail(val *AeAssetServiceEligibilityUpdatedDetail) *NullableAeAssetServiceEligibilityUpdatedDetail {
	return &NullableAeAssetServiceEligibilityUpdatedDetail{value: val, isSet: true}
}

func (v NullableAeAssetServiceEligibilityUpdatedDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAeAssetServiceEligibilityUpdatedDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


