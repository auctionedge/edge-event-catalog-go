openapi: 3.0.0
info:
  title: Edge Event Schemas
  version: 1.0.0
paths: {}
components:
  schemas:
    EdgeEvent:
      x-implements:
        - com.auctionedge.events.models.IEdgeEvent
      oneOf:
        - $ref: "#/components/schemas/ae.service.request"
        - $ref: "#/components/schemas/ae.service.order-placed"
        - $ref: "#/components/schemas/ae.service.waived"
        - $ref: "#/components/schemas/ae.service.completed"
        - $ref: "#/components/schemas/ae.service.cancelled"
        - $ref: "#/components/schemas/ae.service.ordered"
        - $ref: "#/components/schemas/ae.service.order-rejected"
        - $ref: "#/components/schemas/ae.service.order-updated"
        - $ref: "#/components/schemas/ae.document.asset.added"
        - $ref: "#/components/schemas/ae.document.asset.removed"
        - $ref: "#/components/schemas/ae.deal.upserted"
        - $ref: "#/components/schemas/ae.asset.updated.ams"
        - $ref: "#/components/schemas/ae.asset.sold-status-updated"
        - $ref: "#/components/schemas/ae.asset.paid-status-updated"
        - $ref: "#/components/schemas/ae.asset.seller-charge.add-requested"
        - $ref: "#/components/schemas/ae.asset.seller-charge.add-request-failed"
        - $ref: "#/components/schemas/ae.asset.seller-charge.upsert"
        - $ref: "#/components/schemas/ae.asset.seller-charge.add-requested.v2"
        - $ref: "#/components/schemas/ae.asset.seller-charge.remove-requested"
        - $ref: "#/components/schemas/ae.asset.seller-charge.remove-failed"
        - $ref: "#/components/schemas/ae.asset.seller-charge.removed"
        - $ref: "#/components/schemas/ae.asset.seller-charge.upsert.v2"
        - $ref: "#/components/schemas/ae.asset.sale-listing.upserted.ams"
        - $ref: "#/components/schemas/ae.asset.sale-listing.removed.ams"
        - $ref: "#/components/schemas/ae.asset.not-sold"
        - $ref: "#/components/schemas/ae.asset.negotiation.upserted"
        - $ref: "#/components/schemas/ae.asset.negotiation.offer.accepted"
        - $ref: "#/components/schemas/ae.asset.negotiation.offer.rejected"
        - $ref: "#/components/schemas/ae.asset.negotiation.offer.countered"
        - $ref: "#/components/schemas/ae.asset.negotiation.note-added"
        - $ref: "#/components/schemas/ae.asset.label.requested"
        - $ref: "#/components/schemas/ae.asset.label.generated"
        - $ref: "#/components/schemas/ae.asset.label.failed"
        - $ref: "#/components/schemas/ae.asset.deal.sold"
        - $ref: "#/components/schemas/ae.asset.deal.unsold"
        - $ref: "#/components/schemas/ae.asset.checked-out.ams"
        - $ref: "#/components/schemas/ae.asset.checked-in.ams"
        - $ref: "#/components/schemas/ae.ams.payment-vendor.upsert"
        - $ref: "#/components/schemas/ae.user-info.advisory.data-source-updated"
        - $ref: "#/components/schemas/ae.notification.request-delivery"
        - $ref: "#/components/schemas/ae.accounting.payment.source.updated"
        - $ref: "#/components/schemas/ae.advisory.request.asset-sold"
        - $ref: "#/components/schemas/ae.advisory.request.asset"
        - $ref: "#/components/schemas/ae.advisory.request.account.ams"
        - $ref: "#/components/schemas/ae.advisory.asset.ams"
        - $ref: "#/components/schemas/ae.advisory.account.ams"
        - $ref: "#/components/schemas/ae.advisory.account.representatives.ams"
        - $ref: "#/components/schemas/ae.account.payment-source.upsert.ams"
        - $ref: "#/components/schemas/ae.account.payment-source.removed.ams"
        - $ref: "#/components/schemas/ae.account.representative.payer-authorized"
        - $ref: "#/components/schemas/ae.account.representative.payer-deauthorized"
        - $ref: "#/components/schemas/ae.account.representative.upserted.ams"
        - $ref: "#/components/schemas/ae.account.representative.removed.ams"
        - $ref: "#/components/schemas/ae.account.upserted.ams"
        - $ref: "#/components/schemas/ae.account.removed.ams"
        - $ref: "#/components/schemas/ae.asset.gatepass.send-email"
        - $ref: "#/components/schemas/ae.asset.gatepass.created"
        - $ref: "#/components/schemas/ae.asset.gatepass.voided"
        - $ref: "#/components/schemas/ae.asset.gatepass.delivered"
        - $ref: "#/components/schemas/ae.asset.gatepass.buyer.releasable"
        - $ref: "#/components/schemas/ae.asset.gatepass.buyer.revoked"
        - $ref: "#/components/schemas/ae.asset.deal.payment.apply-source"
        - $ref: "#/components/schemas/ae.asset.deal.payment.status-changed"
        - $ref: "#/components/schemas/ae.asset.deal.offer.made"
        - $ref: "#/components/schemas/ae.asset.deal.offer.accepted"
        - $ref: "#/components/schemas/ae.asset.deal.offer.rejected"
        - $ref: "#/components/schemas/ae.asset.deal.charge.upsert"
        - $ref: "#/components/schemas/ae.asset.deal.charge.removed"
      discriminator:
        propertyName: detail-type
    BaseEdgeEvent:
      type: object
      required:
        - detail-type
        - source
        - id
      properties:
        account:
          type: string
          description: The publisher AWS account number
          example: "123456789012"
        detail-type:
          type: string
          description: Identifies, in combination with the source field, the fields and
            values that appear in the detail field.
          example: ${detailType}
        id:
          type: string
          description: A Version 4 UUID that's generated for every event. You can use id
            to trace events as they move through rules to targets.
          minLength: 1
        region:
          description: Identifies the AWS Region where the event originated
          type: string
          example: us-west-2
        resources:
          description: Identifiers for any resources involved in the event
          type: array
          items:
            type: string
            description: Event specific resource identifiers. For AWS resources this will be
              an ARN.
        source:
          type: string
          description: Identifies the service that generated the event. May not begin with
            'aws.'
          example: ae.post-sale-app
        time:
          description: The event timestamp, which can be specified by the service
            originating the event. May be before the actual publication of the
            event. ISO-8601 format
          type: string
          format: date-time
        auction-id:
          description: UA id of the auction. Not all events will need the identification
            of an auction.
          type: string
          example: scsa
        expires-at:
          description: Timestamp after which the consumer should no longer process the
            message. ISO-8601 format
          type: string
          format: date-time
          example: 2019-08-31T14:15:22Z
        deprecated:
          description: True if this version has been deprecated.
          type: boolean
          default: false
        idempotency-key:
          type: string
          description: MD5 content hash on the entire event content (Library generated)
      additionalProperties: false
    common.ua-id:
      type: string
      description: Auction Edge unique identifier for an auction.
      example: daanw
    common.ams.account.key:
      type: string
      description: The account key of an AMS account (i.e. the account or dealer number)
      example: A12345
    common.ams.rep-id-nullable:
      deprecated: true
      type: string
      nullable: true
      x-field-extra-annotation: "@com.fasterxml.jackson.annotation.JsonInclude(com.fa\
        sterxml.jackson.annotation.JsonInclude.Include.ALWAYS)"
      description: The rep id an AMS account.  This common object is deprecated,
        please use common.ams.representative-id instead.
      example: "1"
    common.ams.account-pointer:
      type: object
      description: Identifiers that reference an AMS account.
      required:
        - account-key
        - aa-id
      properties:
        account-key:
          $ref: "#/components/schemas/common.ams.account.key"
        aa-id:
          $ref: "#/components/schemas/common.auction-access.company-id-nullable"
        account-id:
          $ref: "#/components/schemas/common.ams.account.id"
    common.ams.asset-pointer:
      type: object
      description: Identifiers that reference an asset.
      required:
        - id
        - stock
        - vin
      properties:
        id:
          $ref: "#/components/schemas/common.asset.id"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
    common.ams.rep-pointer:
      deprecated: true
      type: object
      description: Identifiers that reference an AMS rep account.  This may not be the
        one that you want, please reference common.ams.representative-pointer
      required:
        - rep-id
        - aa-id
      properties:
        rep-id:
          $ref: "#/components/schemas/common.ams.rep-id-nullable"
        aa-id:
          $ref: "#/components/schemas/common.auction-access.person-id-nullable"
    common.asset.check-in:
      type: object
      required:
        - recorded-at
      properties:
        recorded-at:
          type: string
          format: date-time
          description: Date and time that the Asset first got a stock number in the AMS.
          example: 2024-05-24T13:19:23.238Z
        recorded-by:
          type: string
          description: The user responsible for checking in the asset.
          example: DD
    common.asset.floor-amount:
      type: number
      description: The lowest amount the seller is willing to take for this asset.
      example: 10500
    common.asset.id:
      type: string
      description: Source's unique identifier for asset
      example: 503519-20210827T144732
    common.asset.negotiation.base-offer:
      type: object
      required:
        - id
        - source
        - authorized-by
        - rep
        - amount
        - note
        - notification
      properties:
        id:
          type: string
          description: unique identifier of the offer
        source:
          type: string
          description: the source system that created the offer
        authorized-by:
          type: string
          description: user that entered the offer
        rep:
          $ref: "#/components/schemas/common.ams.rep-pointer"
        amount:
          $ref: "#/components/schemas/common.currency"
        note:
          type: string
          description: a noted added at the time of the offfer
        notification:
          type: object
          required:
            - requested
          properties:
            requested:
              type: boolean
              description: whether or not a notification of the offer was requested to be sent
            methods:
              type: array
              minItems: 1
              items:
                type: string
    common.asset.negotiation.id:
      type: string
      description: Uniquie identifier for a specific negotiation.
    common.asset.negotiation.offer.by:
      type: string
      description: the role of the person that made the offer
      enum:
        - buyer
        - seller
    common.asset.stock:
      type: string
      description: The stock number of the asset.
      example: "5349083"
    common.asset.vin:
      type: string
      description: The Vehicle Identification Number(VIN) of the asset.
      example: 4T3ZK3BB7BU042861
    common.auction-access.person-id-nullable:
      type: string
      nullable: true
      x-field-extra-annotation: "@com.fasterxml.jackson.annotation.JsonInclude(com.fa\
        sterxml.jackson.annotation.JsonInclude.Include.ALWAYS)"
      description: The Auction Access ID of the AMS Representative account.
      example: "100023848"
    common.auction-access.company-id-nullable:
      type: string
      nullable: true
      x-field-extra-annotation: "@com.fasterxml.jackson.annotation.JsonInclude(com.fa\
        sterxml.jackson.annotation.JsonInclude.Include.ALWAYS)"
      description: The Auction Access ID of the AMS account.
      example: "5000123"
    common.currency:
      type: object
      required:
        - cents
        - currency-code
      properties:
        cents:
          type: integer
          description: Amount of money in cents so $175.00 would be 17500 cents.
          example: 17500
        currency-code:
          type: string
          enum:
            - cad
            - usd
    common.vehicle.body-style:
      type: string
      description: The body style of the vehicle
      example: 4 Door Sport Utility Vehicle
    common.vehicle.engine:
      type: object
      description: Attributes that define an engine
      properties:
        cylinders:
          type: number
          description: The number of cylinders the engine has.
          example: 8
        cylinder-configuration:
          type: string
          description: How the cylinders are arranged in an engine.
          enum:
            - flat
            - inline
            - radial
            - rotary
            - v
            - w
        displacement:
          type: string
          description: the total amount of air and fuel that can be drawn into the
            cylinders at one time.
          example: 1.8L
        fuel-type:
          type: string
          description: The type of fuel the engine consumes to operate.
          example: Gas
    common.vehicle.exterior:
      type: object
      description: Attributes defining the exterior of the asset.
      properties:
        bottom-color:
          type: string
          description: The color for the bottom half of the asset.
          example: Red
        top-color:
          type: string
          description: The color for the top half of the asset.
          example: White
        roof-type:
          type: string
          description: A description of the type of roof the asset has
          example: Convertible
    common.vehicle.interior:
      type: object
      description: Attributes defining the interior of the asset
      properties:
        color:
          type: string
          description: The primary color of the interior of the asset
          example: Tan
        seat-trim:
          type: string
          description: The type of material used inside of the asset.
          example: leather
    common.vehicle.make:
      type: string
      description: The manufacturer of the vehicle.
      example: Jeep
    common.vehicle.model:
      type: string
      description: The model of the vehicle.
      example: Renegade
    common.vehicle.odometer-reading:
      type: number
      description: The vehicle's odometer reading
    common.vehicle.odometer-reading-nullable:
      type: number
      description: The vehicle's odometer reading
      nullable: true
    common.vehicle.trimline:
      type: string
      description: The trim of the vehicle.
      example: Altitude
    common.vehicle.year:
      type: integer
      format: int32
      description: The year the vehicle was manufactured.
      example: 2024
    common.ams.account.id:
      type: string
      description: Source's unique identifier for account
      example: 503519-20210827T144732
    common.ams.payment-source:
      type: object
      required:
        - payment-source-id
        - payment-vendor-id
        - display-name
      properties:
        payment-source-id:
          $ref: "#/components/schemas/common.ams.payment-source.id"
        payment-vendor-id:
          $ref: "#/components/schemas/common.ams.payment-vendor.id"
        display-name:
          type: string
          description: The display name of the payment source.
          example: Bank of America
    common.ams.payment-source.id:
      description: auction unique id for payment source in AMS
      type: string
      example: "81941"
    common.ams.payment-vendor.id:
      description: auction unique id for payment vendor in AMS
      type: string
      example: "47"
    common.ams.representative-pointer:
      type: object
      description: Identifiers that reference an AMS representative.
      required:
        - id
        - aa-id
      properties:
        id:
          $ref: "#/components/schemas/common.ams.representative-id"
        aa-id:
          $ref: "#/components/schemas/common.auction-access.person-id-nullable"
        rep-number:
          type: number
          description: Rep number as denoted in ASI, AOS to use same value as
            representative-id
          example: 0
    common.ams.postal-address:
      type: object
      description: Postal address of entity
      required:
        - address1
        - city
        - state
        - postal-code
      properties:
        address1:
          type: string
          description: Address line 1 of location
          example: 123 Main St
        address2:
          type: string
          description: Address line 2 of location
          example: Apt 2a
        address3:
          type: string
          description: Address line 2 of location
          example: "Attn: Accounting"
        city:
          type: string
          description: City of location
          example: Franklin
        state:
          type: string
          description: State of location
          example: TN
        postal-code:
          type: string
          description: Postal code of location
          example: G1A 0A2
    common.ams.representative-id:
      type: string
      nullable: false
      x-field-extra-annotation: "@com.fasterxml.jackson.annotation.JsonInclude(com.fa\
        sterxml.jackson.annotation.JsonInclude.Include.ALWAYS)"
      description: The representative id an AMS account
      example: "1"
    common.ams.person-info:
      type: object
      description: Common person properties that an AMS would produce
      properties:
        first-name:
          description: Representative first name
          type: string
          example: John
        last-name:
          description: Representative Last name
          type: string
          example: Dutton
        nickname:
          description: Representative nickname
          type: string
          example: JD
        title:
          description: Representative title
          type: string
          example: President
        home-phone-number:
          type: string
          description: Home phone number of representative
          example: 407-888-1233
        cell-phone-number:
          type: string
          description: Cell phone number of representative
          example: 407-888-1234
        fax-number:
          type: string
          description: Fax phone number of representative
          example: 407-222-1212
        email:
          description: Email of representative
          type: string
          format: email
          maxLength: 320
          example: JD@JDAuto.com
    common.charge:
      type: object
      description: Standard definition of a charge with associated properties
      required:
        - id
        - display-name
        - charge-type
        - amount
      properties:
        id:
          type: string
          description: Unique id for this charge
          example: PSI-1234-90393F456
        display-name:
          type: string
          description: Description of the charge
          example: Ship.cars transportation fuel costs.
        charge-type:
          type: string
          description: The type of charge that is being requested to be added.
          enum:
            - fuel
            - misc
            - sell
            - transportation
        amount:
          $ref: "#/components/schemas/common.currency"
          description: Amount to be charged to the seller
        cost:
          $ref: "#/components/schemas/common.currency"
          description: Amount of money the auction is out related to the charge.
        note:
          type: string
          description: Notes for the auction relating to the charge
    common.initiator:
      type: object
      description: Common object of who initiated a request
      required:
        - initiator-type
        - initiator-key
      properties:
        initiator-type:
          type: string
          description: Identify if the event was initiated by an application or a user
          enum:
            - application
            - user
        initiator-key:
          type: string
          description: Identifier (or URI) of a system/service component (e.g., code
            module) or user (username)
          example: us-west-2_wwYsnwlPF/natalie.briggs
      example:
        auction:
          type: application
          initiator-key: ams/daanw
        auction-user:
          type: user
          initiator-key: daanw/SPS
        spark-code:
          type: application
          initiator-key: spark/vdp/if-offers-tab
        spark-user:
          type: user
          initiator-key: us-west-2_wwYsnwlPF/natalie.briggs
        auction-account:
          type: user
          initiator-key: daanw/12332123
        etl-sync-subsystem:
          type: application
          initiator-key: edge-datapipe-adb/sync-manager
    common.asset.sale-listing:
      type: object
      description: Common object of a sale listing for an asset
      required:
        - id
        - status
        - venue
        - sale-start-at
        - seller-rep
        - announcements-text
        - announcement-lights
        - updated-at
      properties:
        id:
          type: string
          description: AMS unique identifier for this sale listing of the asset
          example: pipeline20241123B75
        status:
          type: string
          description: Status of the sale listing
          enum:
            - published
            - retracted
            - voided
        venue:
          $ref: "#/components/schemas/common.venue"
        sale-start-at:
          type: string
          format: date-time
          description: The time that this sale listing for the asset begins
        sale-end-at:
          type: string
          format: date-time
          description: The time that this sale listing for the asset ends
        seller-rep:
          $ref: "#/components/schemas/common.ams.representative-id"
        lane:
          type: string
          description: The lane the asset was in when deal made.
          example: A
        lot:
          type: string
          description: The lot the asset was in when deal made.
          example: "0001"
        announcements-text:
          type: array
          minItems: 0
          items:
            type: string
          description: Auction announcements on the asset
          example:
            - As Is
            - No Arb
        announcement-lights:
          type: string
          description: The current lights on the asset when the sale listing was made.
          example: Green,Yellow
        floor-amount:
          $ref: "#/components/schemas/common.currency"
        start-bid:
          $ref: "#/components/schemas/common.currency"
        high-bid:
          $ref: "#/components/schemas/common.currency"
        bid-increment:
          $ref: "#/components/schemas/common.currency"
        main-image-url:
          type: string
          description: The URL for the main image of the asset to be posted on the listing
          example: https://file3.autolookout.net/30608/041637/0225/Ow==/zaccjabt9gpd66101
            -110376-pano.jpg
        photo-count:
          type: string
          description: total number of photos attached to the asset
          example: "11"
        photo-count-updated-at:
          type: string
          format: date-time
          description: timestamp of when photo count was last changed
          example: 2024-11-25T12:45:23.002Z
        buy-now:
          $ref: "#/components/schemas/common.asset.buy-now"
        updated-at:
          type: string
          format: date-time
          description: The time in ISO-8601 formatted at which the record was generated
          example: 2025-01-17T12:45:23.002Z
    common.asset.buy-now:
      type: object
      description: An object representation for an asset's buy now properties
      required:
        - buy-now-price
        - buy-now-valid-at
        - buy-now-valid-until
      properties:
        buy-now-price:
          $ref: "#/components/schemas/common.currency"
        buy-now-valid-at:
          type: string
          format: date-time
          description: The time that this buy-now price is available for the asset
          example: 2025-01-20T10:00:00.000Z
        buy-now-valid-until:
          type: string
          format: date-time
          description: The time that this buy-now price for the asset expires.
    common.venue:
      type: object
      required:
        - display-name
        - organization
        - location
        - venue-type
      properties:
        display-name:
          type: string
          description: The name of this specific venue for the organization
        organization:
          $ref: "#/components/schemas/common.ua-id"
        location:
          $ref: "#/components/schemas/common.physical-location"
        venue-type:
          type: string
          description: The type of the venue
          enum:
            - auction
            - mobile_auction
            - virtual_auction
            - virtual_marketplace
    common.physical-location:
      type: object
      description: Properties of a location
      required:
        - address1
        - city
        - state
        - country-iso-code
        - postal-code
      properties:
        display-name:
          type: string
          description: Name to be displayed by human
          example: AuctionEdge Home Office
        address1:
          type: string
          description: First line of address
          example: 123 Main Street
        address2:
          type: string
          description: Second line of address
          example: Suite 75
        city:
          type: string
          description: The city that the location is in
          example: franklin
        state:
          type: string
          description: The state or province that the location is in
          enum:
            - ab
            - ak
            - al
            - ar
            - as
            - az
            - bc
            - ca
            - co
            - ct
            - dc
            - de
            - fl
            - ga
            - gu
            - hi
            - ia
            - id
            - il
            - in
            - ks
            - ky
            - la
            - ma
            - mb
            - md
            - me
            - mi
            - mn
            - mo
            - mp
            - ms
            - mt
            - nb
            - nc
            - nd
            - ne
            - nf
            - nh
            - nj
            - nl
            - nm
            - ns
            - nt
            - nv
            - ny
            - oh
            - ok
            - or
            - pa
            - pe
            - pr
            - qc
            - ri
            - sc
            - sd
            - sk
            - tn
            - tx
            - um
            - ut
            - va
            - vi
            - vt
            - wa
            - wi
            - wv
            - wy
        postal-code:
          type: string
          description: The postal code of this location
          example: "37067"
        zip4:
          type: string
          description: The 4-number suffix of the postal-code
          example: "2611"
        country-iso-code:
          type: string
          description: The ISO code for the country that this location is in
          enum:
            - ca
            - mx
            - us
        region-code:
          type: string
          description: Auction Edge region that this location is in
          enum:
            - ae_ne
            - ae_se
            - ae_mw
            - ae_nw
            - ae_sw
        time-zone:
          type: string
          description: The time zone that the location is in
          enum:
            - akst
            - ariz
            - ast
            - cst
            - est
            - hst
            - mst
            - pst
    common.ams.sale-listing.id:
      type: string
      description: Uniquie identifier for a sale listing.
    common.deal.id:
      description: Unique id for a deal
      type: string
      example: 250127-81941
    ae.service.request:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.service.request-detail"
    ae.service.order-placed:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.service.order-placed-detail"
    ae.service.waived:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.service.waived-detail"
    ae.service.completed:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.service.completed-detail"
    ae.service.cancelled:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.service.cancelled-detail"
    ae.service.ordered:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.service.ordered-detail"
    ae.service.order-rejected:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.service.order-rejected-detail"
    ae.service.order-updated:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.service.order-updated-detail"
    ae.service.request-detail:
      additionalProperties: false
      description: Request that a service be performed
      type: object
      required:
        - auction-id
        - service
        - stock
        - vin
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        service:
          $ref: "#/components/schemas/service-order"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    service-class-enum:
      type: string
      enum:
        - psi
        - transportation
      description: Service class
      example: psi
    service-code-enum:
      type: string
      description: Service code
      example: "1"
    service-order:
      type: object
      required:
        - class
        - code
      properties:
        class:
          $ref: "#/components/schemas/service-class-enum"
        code:
          $ref: "#/components/schemas/service-code-enum"
        description:
          type: string
          description: Description of service chosen
          example: 6-day
        printer:
          type: string
          description: Printer name, default configuration used if not provided
          example: PRT07
        canPrint:
          type: boolean
          description: Not currently used
          example: false
        isOverridden:
          type: boolean
          description: Normal checks to allow service are bypassed.
          example: true
        feeAmount:
          type: number
          nullable: true
          description: Fee amount
          example: 55
        serviceNote:
          type: string
          description: Note on desired service (not currently used)
          example: Questionable repair on suspension-ators
    ae.service.order-placed-detail:
      additionalProperties: false
      description: Notification that a service order has been placed
      type: object
      required:
        - auction-id
        - service
        - stock
        - vin
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        service:
          type: object
          required:
            - class
            - code
          properties:
            class:
              $ref: "#/components/schemas/service-class-enum"
            code:
              $ref: "#/components/schemas/service-code-enum"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.service.waived-detail:
      additionalProperties: false
      description: Notification that a service has been waived
      type: object
      required:
        - auction-id
        - service
        - stock
        - vin
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        service:
          type: object
          required:
            - class
          properties:
            class:
              $ref: "#/components/schemas/service-class-enum"
            code:
              $ref: "#/components/schemas/service-code-enum"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.service.completed-detail:
      additionalProperties: false
      description: Notification that a service has been completed
      type: object
      required:
        - auction-id
        - service
        - stock
        - vin
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        service:
          type: object
          required:
            - class
            - code
          properties:
            class:
              $ref: "#/components/schemas/service-class-enum"
            code:
              $ref: "#/components/schemas/service-code-enum"
            feeAmount:
              type: number
              nullable: true
              description: Fee amount
              example: 55
        passed:
          type: boolean
          description: Result of service (pass/fail)
        messages:
          type: array
          items:
            type: string
            description: Any messages associated with the completion of the service
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.service.cancelled-detail:
      additionalProperties: false
      description: Notification that a service has been cancelled
      type: object
      required:
        - auction-id
        - service
        - stock
        - vin
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        service:
          type: object
          required:
            - class
            - code
          properties:
            class:
              $ref: "#/components/schemas/service-class-enum"
            code:
              $ref: "#/components/schemas/service-code-enum"
        reason:
          type: string
          description: Reason that the service was cancelled
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.service.ordered-detail:
      additionalProperties: false
      description: Notification that a service has been ordered
      type: object
      required:
        - auction-id
        - service
        - stock
        - vin
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        service:
          type: object
          required:
            - class
            - code
          properties:
            class:
              $ref: "#/components/schemas/service-class-enum"
            code:
              $ref: "#/components/schemas/service-code-enum"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.service.order-rejected-detail:
      additionalProperties: false
      description: Notification that a service order has been rejected
      type: object
      required:
        - auction-id
        - service
        - stock
        - vin
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        service:
          type: object
          required:
            - class
            - code
          properties:
            class:
              $ref: "#/components/schemas/service-class-enum"
            code:
              $ref: "#/components/schemas/service-code-enum"
        reason:
          type: string
          description: Reason that the service order was rejected
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.service.order-updated-detail:
      additionalProperties: false
      description: Notification that a service order has changed status, other than
        completed or cancelled
      type: object
      required:
        - auction-id
        - stock
        - vin
        - service
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        service:
          type: object
          required:
            - class
            - code
            - status
          properties:
            class:
              $ref: "#/components/schemas/service-class-enum"
            code:
              $ref: "#/components/schemas/service-code-enum"
            status:
              type: string
              enum:
                - completed
                - failed
                - open
                - pending
              description: Status of current state of service
              example: completed
            note:
              type: string
              description: Notes, summaries, or details about service that may be shared with
                end user
              example: Frame Inspection Completed
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.document.asset.added:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.document.asset.added-detail"
    ae.document.asset.removed:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.document.asset.removed-detail"
    ae.document.asset.added-detail:
      additionalProperties: false
      description: Document uploaded and available
      type: object
      required:
        - document-id
        - document-type
        - auction-id
        - asset-stock
        - asset-vin
        - service-id
        - recorded-at
      properties:
        document-id:
          $ref: "#/components/schemas/document-id"
        document-type:
          $ref: "#/components/schemas/document-type"
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset-stock:
          $ref: "#/components/schemas/common.asset.stock"
        asset-vin:
          $ref: "#/components/schemas/common.asset.vin"
        service-id:
          $ref: "#/components/schemas/service-id"
        recorded-at:
          $ref: "#/components/schemas/recorded-at"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.document.asset.removed-detail:
      additionalProperties: false
      description: Document removed and no long available
      type: object
      required:
        - document-id
        - document-type
        - auction-id
        - asset-stock
        - asset-vin
        - recorded-at
      properties:
        document-id:
          $ref: "#/components/schemas/document-id"
        document-type:
          $ref: "#/components/schemas/document-type"
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset-stock:
          $ref: "#/components/schemas/common.asset.stock"
        asset-vin:
          $ref: "#/components/schemas/common.asset.vin"
        recorded-at:
          $ref: "#/components/schemas/recorded-at"
          initiator:
            $ref: "#/components/schemas/common.initiator"
    document-id:
      type: string
      description: Unique identifier for Spark Document
    service-id:
      type: string
      description: Id to access the service(SparkDocs) that will provide the method to
        retrieve the resource.
    recorded-at:
      type: string
      format: date-time
      description: Date and time the document was added
      example: 2024-06-01T14:35:12.311Z
    document-type:
      type: string
      description: Type of document
      enum:
        - approval_for_work_orders
        - arbitration
        - autoims_notification
        - bill_of_sale
        - bill_of_sale_auction_copy
        - bill_of_sale_buyer_copy
        - bill_of_sale_seller_copy
        - booksheet
        - bpp_claim
        - buyback_form
        - buyer_check
        - buyer_gate_pass
        - buyer_protection_plan
        - condition_report_scanned
        - correspondance
        - electronic_condition_report
        - general_motors_window_sticker
        - gsa_form_97
        - if_sheet
        - miscellaneous
        - pickup_transportation
        - post_sale_inspection
        - pre_sale_inspection
        - pre_inspection_certification
        - property_log_sheet
        - receipt
        - redemption
        - repair_estimates
        - repair_gate_pass
        - repo_check_in_ticket
        - seller_check
        - seller_gate_pass
        - service_invoice
        - south_carolina_pto
        - thank_you_note_to_buyer
        - title_supporting_documents
        - tracker
        - unknown
        - vendor_invoice
        - window_sticker
        - work_order
    ae.deal.upserted:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.deal.upserted-detail"
    ae.deal.upserted-detail:
      additionalProperties: false
      description: Deal entity
      type: object
      required:
        - id
        - auction-id
        - asset
        - sale-listing
        - seller
        - buyer
        - sold-at
        - amount
        - updated-at
        - initiator
      properties:
        id:
          $ref: "#/components/schemas/common.deal.id"
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        seller:
          $ref: "#/components/schemas/common.ams.account.id"
        seller-agent:
          $ref: "#/components/schemas/common.ams.representative-id"
        sale-listing:
          $ref: "#/components/schemas/common.ams.sale-listing.id"
        sold-at:
          type: string
          format: date-time
          description: The time in ISO-8601 formatted at which the asset was sold
          example: 2024-05-24T13:19:23.238Z
        buyer:
          $ref: "#/components/schemas/common.ams.account.id"
        buyer-agent:
          $ref: "#/components/schemas/common.ams.representative-id"
        amount:
          $ref: "#/components/schemas/common.currency"
        sold-method:
          type: string
          description: The type of sale the deal was made in.
          example: inlane
          enum:
            - inlane
            - online
        updated-at:
          type: string
          format: date-time
          description: The time in ISO-8601 format in UTC timezone at which the record was
            generated
          example: 2024-05-24T13:19:23.238Z
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.updated.ams:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.updated.ams-detail"
    ae.asset.updated.ams-detail:
      additionalProperties: false
      description: Asset updated event for AMS assets
      type: object
      required:
        - auction-id
        - id
        - stock
        - vin
        - seller
        - check-in
      x-entities:
        - asset
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        id:
          $ref: "#/components/schemas/common.asset.id"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        seller:
          $ref: "#/components/schemas/common.ams.account-pointer"
        check-in:
          $ref: "#/components/schemas/common.asset.check-in"
        year:
          $ref: "#/components/schemas/common.vehicle.year"
        make:
          $ref: "#/components/schemas/common.vehicle.make"
        model:
          $ref: "#/components/schemas/common.vehicle.model"
        trimline:
          $ref: "#/components/schemas/common.vehicle.trimline"
        body-style:
          $ref: "#/components/schemas/common.vehicle.body-style"
        floor-amount-usd:
          $ref: "#/components/schemas/common.asset.floor-amount"
        interior:
          $ref: "#/components/schemas/common.vehicle.interior"
        exterior:
          $ref: "#/components/schemas/common.vehicle.exterior"
        current-odometer-reading:
          $ref: "#/components/schemas/common.vehicle.odometer-reading"
        engine:
          $ref: "#/components/schemas/common.vehicle.engine"
        transmission-type:
          $ref: "#/components/schemas/transmission-type"
        drivetrain:
          $ref: "#/components/schemas/drivetrain"
        auction-grade:
          $ref: "#/components/schemas/auction-grade"
        updated-at:
          type: string
          format: date-time
          nullable: true
          description: The date and time at which the asset was last updated at.
        initiator:
          $ref: "#/components/schemas/common.initiator"
    transmission-type:
      type: string
      description: The type of transmission the asset has.
      example: Automatic
    drivetrain:
      type: string
      description: The type of drivetrain the asset has.
      enum:
        - fwd
        - rwd
        - awd
        - 4wd
    auction-grade:
      type: number
      description: A value rating the over all condition of the vehicle typically a
        number between 0-5 (5 being the best).
      example: 1.4
    ae.asset.sold-status-updated:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.sold-status-updated-detail"
    ae.asset.paid-status-updated:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.paid-status-updated-detail"
    ae.asset.sold-status-updated-detail:
      additionalProperties: false
      description: Notification that an asset sold status has been updated.
      type: object
      required:
        - auction-id
        - stock
        - vin
        - amount
        - updated-at
        - is-sold
      x-entities:
        - asset
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        amount:
          type: number
          nullable: true
          x-field-extra-annotation: "@com.fasterxml.jackson.annotation.JsonInclude(com.fa\
            sterxml.jackson.annotation.JsonInclude.Include.ALWAYS)"
          description: Amount asset was sold for, will be null if reversed
          example: 123.45
        updated-at:
          type: string
          format: date-time
          description: ISO-8601 formatted date time
        is-sold:
          type: boolean
          description: True if vehicle is sold, false if not (reversed)
          example: true
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.paid-status-updated-detail:
      additionalProperties: false
      description: Notification that an asset has been paid for
      type: object
      required:
        - auction-id
        - stock
        - vin
        - is-paid
        - updated-at
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        is-paid:
          type: boolean
          description: True if vehicle is paid for, false if not (reversed)
          example: true
        updated-at:
          type: string
          format: date-time
          description: ISO-8601 formatted date time
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.seller-charge.add-requested:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.seller-charge.add-requested-detail"
    ae.asset.seller-charge.add-request-failed:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.seller-charge.add-request-failed-detail"
    ae.asset.seller-charge.upsert:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.seller-charge.upsert-detail"
    ae.asset.seller-charge.add-requested.v2:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.seller-charge.add-requested.v2-detail"
    ae.asset.seller-charge.remove-requested:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.seller-charge.remove-requested-detail"
    ae.asset.seller-charge.remove-failed:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.seller-charge.remove-failed-detail"
    ae.asset.seller-charge.removed:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.seller-charge.removed-detail"
    ae.asset.seller-charge.upsert.v2:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.seller-charge.upsert.v2-detail"
    ae.asset.seller-charge.add-requested-detail:
      additionalProperties: false
      description: A request for a charge to be added to an asset for a seller.
      type: object
      required:
        - asset-id
        - auction-id
        - charge
        - reference-id
        - seller
        - stock
        - vin
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        asset-id:
          deprecated: true
          $ref: "#/components/schemas/common.asset.id"
        vin:
          deprecated: true
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          deprecated: true
          $ref: "#/components/schemas/common.asset.stock"
        seller:
          $ref: "#/components/schemas/common.ams.account-pointer"
        reference-id:
          type: string
          description: Identifier that can be used to identify this event in a response
            event.
        charge:
          type: object
          required:
            - display-name
            - charge-type
            - amount
          properties:
            display-name:
              type: string
              description: Description of the charge
              example: Ship.cars transportation fuel costs.
            charge-type:
              type: string
              description: The type of charge that is being requested to be added.
              enum:
                - fuel
                - misc
                - sell
                - transportation
            amount:
              type: number
              description: Amount to be charged to the seller
            cost:
              type: number
              description: Amount of money the auction is out related to the charge.
            note:
              type: string
              description: Notes for the auction relating to the charge
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.seller-charge.add-request-failed-detail:
      additionalProperties: false
      description: A response to an add-requested event to show the request was successful.
      type: object
      required:
        - asset-id
        - auction-id
        - reason
        - reference-id
        - seller
        - stock
        - vin
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        asset-id:
          deprecated: true
          $ref: "#/components/schemas/common.asset.id"
        vin:
          deprecated: true
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          deprecated: true
          $ref: "#/components/schemas/common.asset.stock"
        seller:
          $ref: "#/components/schemas/common.ams.account-pointer"
        reference-id:
          type: string
          description: Identifier that can be used to identify this event in a response
            event.
        reason:
          type: string
          description: An explaination for why the charge could not be added.
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.seller-charge.upsert-detail:
      additionalProperties: false
      description: An event denoting an insert or update of a charge on a seller's asset.
      type: object
      required:
        - asset-id
        - auction-id
        - charge
        - seller
        - stock
        - vin
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        asset-id:
          deprecated: true
          $ref: "#/components/schemas/common.asset.id"
        vin:
          deprecated: true
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          deprecated: true
          $ref: "#/components/schemas/common.asset.stock"
        seller:
          $ref: "#/components/schemas/common.ams.account-pointer"
        add-request-reference-id:
          type: string
          nullable: true
          description: Unique identifier referencing the add request event that created
            the charge
        charge:
          type: object
          required:
            - id
            - display-name
            - charge-type
            - amount
          properties:
            id:
              type: string
              description: AMS's unique identifier for the charge
              example: TRANS-5035119-20210827T144732
            display-name:
              type: string
              description: Description of the charge
              example: Ship.cars transportation fuel costs.
            charge-type:
              type: string
              description: The type of charge that is being requested to be added.
              enum:
                - fuel
                - misc
                - sell
                - transportation
            amount:
              type: number
              description: Amount to be charged to the seller
            cost:
              type: number
              description: Amount of money the auction is out related to the charge.
            note:
              type: string
              description: Notes for the auction relating to the charge
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.seller-charge.add-requested.v2-detail:
      additionalProperties: false
      description: A request for a charge to be added to an asset for a seller.
      type: object
      required:
        - asset
        - auction-id
        - charge
        - reference-id
        - seller
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        seller:
          $ref: "#/components/schemas/common.ams.account-pointer"
        reference-id:
          type: string
          description: Identifier that can be used to identify this event in a response
            event.
        charge:
          $ref: "#/components/schemas/common.charge"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.seller-charge.remove-requested-detail:
      additionalProperties: false
      description: A request for a seller charge to be removed.
      type: object
      required:
        - asset
        - auction-id
        - charge-id
        - reference-id
        - seller
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        seller:
          $ref: "#/components/schemas/common.ams.account-pointer"
        reference-id:
          type: string
          description: Identifier that can be used to identify this event in a response
            event.
        charge-id:
          type: string
          description: Unique identifier of the charge to be removed.
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.seller-charge.remove-failed-detail:
      additionalProperties: false
      description: triggered when a seller charge fails to be removed for any reason.
      type: object
      required:
        - asset
        - auction-id
        - reason
        - charge-id
        - seller
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        seller:
          $ref: "#/components/schemas/common.ams.account-pointer"
        charge-id:
          type: string
          description: Unique identifier of the charge to be removed.
        remove-request-reference-id:
          type: string
          nullable: true
          description: Unique identifier referencing a remove request event that requested
            the charge be removed
        reason:
          type: string
          description: An explaination for why the charge could not be added.
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.seller-charge.removed-detail:
      additionalProperties: false
      description: triggered when a seller charge is removed successfully.
      type: object
      required:
        - asset
        - auction-id
        - charge-id
        - seller
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        charge-id:
          type: string
          description: Unique identifier of the charge being removed.
        seller:
          $ref: "#/components/schemas/common.ams.account-pointer"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        remove-request-reference-id:
          type: string
          nullable: true
          description: Unique identifier referencing the remove request event that removed
            the charge
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.seller-charge.upsert.v2-detail:
      additionalProperties: false
      description: An event denoting an insert or update of a charge on a seller's asset.
      type: object
      required:
        - asset
        - auction-id
        - charge
        - seller
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        seller:
          $ref: "#/components/schemas/common.ams.account-pointer"
        add-request-reference-id:
          type: string
          nullable: true
          description: Unique identifier referencing the add request event that created
            the charge
        charge:
          $ref: "#/components/schemas/common.charge"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.sale-listing.upserted.ams:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.sale-listing.upserted.ams-detail"
    ae.asset.sale-listing.removed.ams:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.sale-listing.removed.ams-detail"
    ae.asset.sale-listing.upserted.ams-detail:
      additionalProperties: false
      description: A sale listing for an asset has been created or modified by the AMS
      type: object
      required:
        - auction-id
        - asset
        - sale-listing
        - updated-at
        - initiator
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        sale-listing:
          $ref: "#/components/schemas/common.asset.sale-listing"
        updated-at:
          $ref: "#/components/schemas/updated-at"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.sale-listing.removed.ams-detail:
      additionalProperties: false
      description: A sale listing has been removed from an asset by the AMS
      type: object
      required:
        - auction-id
        - asset
        - sale-listing-id
        - updated-at
        - initiator
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        sale-listing-id:
          $ref: "#/components/schemas/common.ams.sale-listing.id"
        updated-at:
          $ref: "#/components/schemas/updated-at"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.not-sold:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.not-sold-detail"
    ae.asset.not-sold-detail:
      additionalProperties: false
      description: Vehicle ran in a sale, but did not sell
      type: object
      required:
        - auction-id
        - asset
        - sale-listing-id
        - updated-at
        - initiator
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        sale-listing-id:
          $ref: "#/components/schemas/common.ams.sale-listing.id"
        updated-at:
          $ref: "#/components/schemas/updated-at"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.negotiation.upserted:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.negotiation.upserted-detail"
    ae.asset.negotiation.offer.accepted:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.negotiation.offer.accepted-detail"
    ae.asset.negotiation.offer.rejected:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.negotiation.offer.rejected-detail"
    ae.asset.negotiation.offer.countered:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.negotiation.offer.countered-detail"
    ae.asset.negotiation.note-added:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.negotiation.note-added-detail"
    ae.asset.negotiation.upserted-detail:
      additionalProperties: false
      description: Event emitted by negotiation service when a negotiation is upserted.
      type: object
      required:
        - auction-id
        - id
        - asset
        - conditions
        - opened-at
        - closed-at
        - successful
        - ball-control
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        id:
          $ref: "#/components/schemas/common.asset.negotiation.id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        conditions:
          type: object
          required:
            - seller
            - buyer
            - lights
            - announcements
          properties:
            seller:
              $ref: "#/components/schemas/common.ams.account-pointer"
            buyer:
              $ref: "#/components/schemas/common.ams.account-pointer"
            lights:
              type: string
              description: Light that was on the vehicle when negotiations started
              example: G
            announcements:
              type: array
              items:
                type: string
        initial-floor-amount:
          $ref: "#/components/schemas/common.currency"
        opened-at:
          type: string
          format: date-time
        closed-at:
          type: string
          nullable: true
          format: date-time
        successful:
          type: boolean
          nullable: true
        failure-reason:
          type: string
          enum:
            - rejected_by_buyer
            - rejected_by_seller
            - deal_changed
        ball-control:
          type: string
          enum:
            - buyer
            - seller
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.negotiation.offer.accepted-detail:
      additionalProperties: false
      description: emitted by the negotiation service when an offer is accepted.
      type: object
      required:
        - auction-id
        - negotiation-id
        - accepted-offer-id
        - asset
        - offer
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        negotiation-id:
          $ref: "#/components/schemas/common.asset.negotiation.id"
        accepted-offer-id:
          type: string
          description: unique identifier of the offer that is being accepted
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        offer:
          allOf:
            - $ref: "#/components/schemas/common.asset.negotiation.base-offer"
            - type: object
              required:
                - accepted-by
              properties:
                accepted-by:
                  $ref: "#/components/schemas/common.asset.negotiation.offer.by"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.negotiation.offer.rejected-detail:
      additionalProperties: false
      description: emitted by the negotiation service when an offer is rejected.
      type: object
      required:
        - auction-id
        - negotiation-id
        - rejected-offer-id
        - asset
        - offer
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        negotiation-id:
          $ref: "#/components/schemas/common.asset.negotiation.id"
        rejected-offer-id:
          type: string
          description: unique identifier of the offer that is being rejected
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        offer:
          allOf:
            - $ref: "#/components/schemas/common.asset.negotiation.base-offer"
            - type: object
              required:
                - rejected-by
              properties:
                rejected-by:
                  $ref: "#/components/schemas/common.asset.negotiation.offer.by"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.negotiation.offer.countered-detail:
      additionalProperties: false
      description: emitted by the negotiation service when an offer is countered.
      type: object
      required:
        - auction-id
        - negotiation-id
        - countered-offer-id
        - asset
        - offer
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        negotiation-id:
          $ref: "#/components/schemas/common.asset.negotiation.id"
        countered-offer-id:
          type: string
          description: unique identifier of the offer that is being countered
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        offer:
          allOf:
            - $ref: "#/components/schemas/common.asset.negotiation.base-offer"
            - type: object
              required:
                - countered-by
              properties:
                countered-by:
                  $ref: "#/components/schemas/common.asset.negotiation.offer.by"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.negotiation.note-added-detail:
      additionalProperties: false
      description: emitted by the negotiation service when a note is added to a negotiation.
      type: object
      required:
        - auction-id
        - negotiation-id
        - note
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        negotiation-id:
          type: string
          description: the unique identifier of the negotiation
        note:
          type: object
          required:
            - id
            - noted-by
            - noted-at
            - source
            - subject
            - body
          properties:
            id:
              type: string
              description: unique identifier of the note
            noted-by:
              type: string
              description: User that added the note
            noted-at:
              type: string
              format: date-time
              description: the time the note was taken
            source:
              type: string
              description: the source system that created the note
            subject:
              type: string
              enum:
                - auction
                - buyer
                - seller
            body:
              type: string
              description: The body of the note
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.label.requested:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.label.requested-detail"
    ae.asset.label.generated:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.label.generated-detail"
    ae.asset.label.failed:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.label.failed-detail"
    ae.asset.label.requested-detail:
      additionalProperties: false
      description: A request has been made to generate an asset label
      type: object
      required:
        - auction-id
        - request-id
        - asset-id
        - stock
        - vin
        - quantity
        - label-type
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        request-id:
          type: string
          description: Unique identifier for the request
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        asset-id:
          deprecated: true
          $ref: "#/components/schemas/common.asset.id"
        stock:
          deprecated: true
          $ref: "#/components/schemas/common.asset.stock"
        vin:
          deprecated: true
          $ref: "#/components/schemas/common.asset.vin"
        quantity:
          $ref: "#/components/schemas/quantity"
        label-type:
          $ref: "#/components/schemas/label-type"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.label.generated-detail:
      additionalProperties: false
      description: Event fired when prints label request is successfully processed
      type: object
      required:
        - auction-id
        - request-id
        - asset-id
        - stock
        - vin
        - quantity
        - label-type
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        request-id:
          type: string
          description: Unique identifier for the request
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        asset-id:
          deprecated: true
          $ref: "#/components/schemas/common.asset.id"
        stock:
          deprecated: true
          $ref: "#/components/schemas/common.asset.stock"
        vin:
          deprecated: true
          $ref: "#/components/schemas/common.asset.vin"
        quantity:
          $ref: "#/components/schemas/quantity"
        label-type:
          $ref: "#/components/schemas/label-type"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.label.failed-detail:
      additionalProperties: false
      description: Event fired when the label request is unable to be successfully processed
      type: object
      required:
        - auction-id
        - request-id
        - asset-id
        - stock
        - vin
        - message
        - quantity
        - label-type
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        request-id:
          type: string
          description: Unique identifier for the request
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        asset-id:
          deprecated: true
          $ref: "#/components/schemas/common.asset.id"
        stock:
          deprecated: true
          $ref: "#/components/schemas/common.asset.stock"
        vin:
          deprecated: true
          $ref: "#/components/schemas/common.asset.vin"
        message:
          type: string
          description: Error message when generation was attempted
        quantity:
          $ref: "#/components/schemas/quantity"
        label-type:
          $ref: "#/components/schemas/label-type"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    label-type:
      type: string
      description: The type of label the user requested
      enum:
        - default
        - inventory
        - photo-booth
    quantity:
      type: number
      description: Number of copies of the label to generate for asset
      example: 2
    ae.asset.deal.sold:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.deal.sold-detail"
    ae.asset.deal.unsold:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.deal.unsold-detail"
    ae.asset.deal.sold-detail:
      additionalProperties: false
      description: Vehicle sold event
      type: object
      required:
        - auction-id
        - stock
        - vin
        - sale-date
        - seller
        - buyer
        - lane
        - lot
        - amount
      x-entities:
        - asset
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        deal-id:
          $ref: "#/components/schemas/common.deal.id"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        seller:
          $ref: "#/components/schemas/common.ams.account-pointer"
        buyer:
          $ref: "#/components/schemas/common.ams.account-pointer"
        year:
          $ref: "#/components/schemas/common.vehicle.year"
        make:
          $ref: "#/components/schemas/common.vehicle.make"
        model:
          $ref: "#/components/schemas/common.vehicle.model"
        trimline:
          $ref: "#/components/schemas/common.vehicle.trimline"
        mileage:
          type: integer
          format: int32
          description: The mileage of the asset being sold.
          example: 1234567
        fuel-type:
          type: string
          description: The type of fuel required by the asset being sold.
          example: gas
        sale-type:
          type: string
          description: The type of sale the deal was made in.
          example: inlane
        lights:
          type: string
          description: The lights on the asset when the deal was made.
          example: Green,Yellow
        announcements:
          type: string
          description: The announcments on the asset when deal was made.
          example: Green,Yellow
        sale-date:
          $ref: "#/components/schemas/sale-date"
        lane:
          $ref: "#/components/schemas/lane"
        lot:
          $ref: "#/components/schemas/lot"
        amount:
          $ref: "#/components/schemas/amount"
        updated-at:
          $ref: "#/components/schemas/updated-at"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.deal.unsold-detail:
      additionalProperties: false
      description: Vehicle unsold event.
      type: object
      required:
        - auction-id
        - stock
        - vin
        - sale-date
        - lane
        - lot
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        deal-id:
          $ref: "#/components/schemas/common.deal.id"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        sale-date:
          $ref: "#/components/schemas/sale-date"
        lane:
          $ref: "#/components/schemas/lane"
        lot:
          $ref: "#/components/schemas/lot"
        updated-at:
          $ref: "#/components/schemas/updated-at"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.checked-out.ams:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.checked-out.ams-detail"
    ae.asset.checked-out.ams-detail:
      additionalProperties: false
      description: Event that designates that an asset has been checked-out of the
        AMS.  Which means that the asset no longer resides at the auction and
        will not be checked back in under same stock number.
      type: object
      required:
        - auction-id
        - asset
        - updated-at
        - checked-out-by
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        updated-at:
          $ref: "#/components/schemas/updated-at"
        checked-out-by:
          type: string
          description: The auction personnel that checked out the vehicle
          example: JSmith
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.checked-in.ams:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.checked-in.ams-detail"
    ae.asset.checked-in.ams-detail:
      additionalProperties: false
      x-entities:
        - asset
      description: Event that designates that an asset has been checked-in to the
        AMS.  Which means that the asset now has a stock number.
      type: object
      required:
        - auction-id
        - id
        - stock
        - vin
        - check-in
        - seller
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        id:
          $ref: "#/components/schemas/common.asset.id"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        check-in:
          $ref: "#/components/schemas/common.asset.check-in"
        seller:
          $ref: "#/components/schemas/common.ams.account-pointer"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.ams.payment-vendor.upsert:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.ams.payment-vendor.upsert-detail"
    ae.ams.payment-vendor.upsert-detail:
      additionalProperties: false
      description: Information about payment vendor accepted by auction
      type: object
      required:
        - auction-id
        - payment-vendor-id
        - display-name
        - vendor-type
        - transaction-fee
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        payment-vendor-id:
          type: string
          description: auction unique id for payment vendor in AMS
          example: "47"
        display-name:
          type: string
          description: display name of the payment vendor
          example: KINETIC
        auction-access-id:
          type: string
          description: AuctionACCESS id for the vendor payment is made with.
          nullable: true
          example: "700029"
        vendor-type:
          type: string
          enum:
            - ach
            - credit_card
            - floorplan
        transaction-fee:
          type: object
          description: Amount to be charged when payment is made using vendor
          required:
            - flat-rate
            - percentage-of-total
          properties:
            flat-rate:
              type: number
              example: 25
            percentage-of-total:
              type: number
              example: 20
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.user-info.advisory.data-source-updated:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.user-info.advisory.data-source-updated-detail"
    ae.user-info.advisory.data-source-updated-detail:
      additionalProperties: false
      description: Advisory message for user-info
      type: object
      required:
        - version
        - bucket
        - object
        - request-id
        - requester
        - source-ip-address
        - reason
      properties:
        version:
          type: string
          minLength: 1
          example: 0
        bucket:
          type: object
          required:
            - name
          properties:
            name:
              type: string
              example: ae-pdp-production
        object:
          type: object
          required:
            - key
            - size
            - etag
            - sequencer
          properties:
            key:
              type: string
              example: auth-data/spark-api.json
              minLength: 1
            size:
              type: integer
              example: 777319
            etag:
              type: string
              example: 4e3f4656cae1e3d9427df4fb92773d6c
            sequencer:
              type: string
              example: 0066E47DA09EE2B277
        request-id:
          type: string
          example: JFK4SWXNXV7K65B1
        requester:
          type: string
          example: 125147775665
        source-ip-address:
          type: string
          example: 127.0.0.1
        reason:
          type: string
          example: PutObject
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.notification.request-delivery:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.notification.request-delivery-detail"
    ae.notification.request-delivery-detail:
      description: Notification to be delivered
      type: object
      required:
        - target-list
        - message
      properties:
        message:
          type: string
          description: The message to be delivered
          example: Your vehicle is ready for pickup
        target-list:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/notification-target"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    notification-target:
      type: object
      description: The target to deliver the notification to
      required:
        - delivery-method
        - delivery-address
      properties:
        delivery-method:
          type: string
          description: The method to deliver the notification
          enum:
            - email
            - sms
          example: email
        delivery-address:
          type: string
          description: The address to deliver the notification to
    ae.accounting.payment.source.updated:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.accounting.payment.source.updated-detail"
    ae.accounting.payment.source.updated-detail:
      deprecated: true
      additionalProperties: false
      description: Notification that the payment source or status for a vehicle has
        been updated
      type: object
      required:
        - auction-id
        - prior-source
        - current-source
        - stock
        - vin
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        prior-source:
          type: string
          nullable: true
          x-field-extra-annotation: "@com.fasterxml.jackson.annotation.JsonInclude(com.fa\
            sterxml.jackson.annotation.JsonInclude.Include.ALWAYS)"
          description: Simple text describing the prior funding source if any.
          example: kinetic
        current-source:
          type: string
          nullable: true
          x-field-extra-annotation: "@com.fasterxml.jackson.annotation.JsonInclude(com.fa\
            sterxml.jackson.annotation.JsonInclude.Include.ALWAYS)"
          description: Simple text describing the current funding source if any.
          example: kinetic
        prior-status:
          $ref: "#/components/schemas/payment-status"
          nullable: true
          description: Prior state of the payment
          example: applied
        current-status:
          $ref: "#/components/schemas/payment-status"
          nullable: true
          description: Current state of the payment
          example: failed
        initiator:
          $ref: "#/components/schemas/common.initiator"
    payment-status:
      description: Status of a payment
      type: string
      enum:
        - applied
        - completed
        - reversed
        - failed
    ae.advisory.request.asset-sold:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.advisory.request.asset-sold-detail"
    ae.advisory.request.asset:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.advisory.request.asset-detail"
    ae.advisory.request.account.ams:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.advisory.request.account.ams-detail"
    ae.advisory.request.asset-sold-detail:
      additionalProperties: false
      description: Request for advisory messages be produced for sold assets by date range
      type: object
      required:
        - event-types
        - auction-id
        - date-range
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        event-types:
          $ref: "#/components/schemas/event-type-list"
        date-range:
          $ref: "#/components/schemas/date-range"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.advisory.request.asset-detail:
      additionalProperties: false
      description: Request to ask for advisory messages be produced for a particular
        asset(s)
      type: object
      required:
        - event-types
        - auction-id
        - ids
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        event-types:
          $ref: "#/components/schemas/event-type-list"
        ids:
          $ref: "#/components/schemas/id-list"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.advisory.request.account.ams-detail:
      additionalProperties: false
      description: Request to ask for advisory messages be produced for a particular
        AMS account(s)
      type: object
      required:
        - event-types
        - auction-id
        - ids
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        event-types:
          $ref: "#/components/schemas/event-type-list"
        ids:
          $ref: "#/components/schemas/id-list"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    event-type-list:
      type: array
      minItems: 1
      description: Array of advisory messages that are being requested to be produced
      items:
        type: string
        description: detail-type for advisory message to be produced
    id-list:
      type: array
      minItems: 1
      items:
        type: string
        description: ID of advisory resource to be produced
    date-range:
      type: object
      required:
        - start-at
      properties:
        start-at:
          $ref: "#/components/schemas/date-type"
        end-at:
          description: If this is not specified then end-at is assumed to be all future
            dates
          $ref: "#/components/schemas/date-type"
    date-type:
      type: string
      format: date-time
      description: ISO Date
      example: 2024-05-24T13:19:23.238Z
    ae.advisory.asset.ams:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.advisory.asset.ams-detail"
    ae.advisory.asset.ams-detail:
      additionalProperties: false
      description: Advisory Asset event for AMS assets
      type: object
      required:
        - auction-id
        - id
        - stock
        - vin
        - seller
        - check-in
      x-entities:
        - asset
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        id:
          $ref: "#/components/schemas/common.asset.id"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        seller:
          $ref: "#/components/schemas/common.ams.account-pointer"
        check-in:
          $ref: "#/components/schemas/common.asset.check-in"
        year:
          $ref: "#/components/schemas/common.vehicle.year"
        make:
          $ref: "#/components/schemas/common.vehicle.make"
        model:
          $ref: "#/components/schemas/common.vehicle.model"
        trimline:
          $ref: "#/components/schemas/common.vehicle.trimline"
        body-style:
          $ref: "#/components/schemas/common.vehicle.body-style"
        deal:
          $ref: "#/components/schemas/deal"
        floor-amount-usd:
          $ref: "#/components/schemas/common.asset.floor-amount"
        interior:
          $ref: "#/components/schemas/common.vehicle.interior"
        exterior:
          $ref: "#/components/schemas/common.vehicle.exterior"
        current-odometer-reading:
          $ref: "#/components/schemas/common.vehicle.odometer-reading"
        engine:
          $ref: "#/components/schemas/common.vehicle.engine"
        transmission-type:
          $ref: "#/components/schemas/transmission-type"
        drivetrain:
          $ref: "#/components/schemas/drivetrain"
        title:
          $ref: "#/components/schemas/title"
        auction-grade:
          $ref: "#/components/schemas/auction-grade"
        updated-at:
          type: string
          format: date-time
          nullable: true
          description: The date and time at which the asset was last updated at.
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ams-sale-listing-sale-date:
      type: string
      format: date
      description: Date on which the asset ran that the deal was created for.
      example: 2024-05-25
    ams-sale-listing-lane:
      type: string
      description: The lane that the asset ran in.
      example: L
    ams-sale-listing-lot:
      type: string
      description: The lot that the asset was attached to.
      example: "0001"
    deal-ams-sale-listing:
      type: object
      required:
        - sale-date
        - lane
        - lot
      properties:
        sale-date:
          $ref: "#/components/schemas/ams-sale-listing-sale-date"
        lane:
          $ref: "#/components/schemas/ams-sale-listing-lane"
        lot:
          $ref: "#/components/schemas/ams-sale-listing-lot"
    deal-sold-at:
      type: string
      format: date-time
      nullable: true
      description: The date time that asset was sold at.
      example: 2024-05-23T15:02Z
    deal-sold-amount-usd:
      type: number
      description: The amount that the asset was sold for.
      example: 10000
    deal-on-offer:
      type: boolean
      default: false
      description: Whether or not the current deal is "on offer" / "on IF"
    deal-in-arbitration:
      type: boolean
      default: false
      description: Whether or not the current deal is being arbitrated.
    deal:
      type: object
      description: Details on the current deal for the asset.
      required:
        - ams-sale-listing
        - buyer
        - sold-amount-usd
      properties:
        ams-sale-listing:
          $ref: "#/components/schemas/deal-ams-sale-listing"
        buyer:
          $ref: "#/components/schemas/common.ams.account-pointer"
        sold-at:
          $ref: "#/components/schemas/deal-sold-at"
        sold-amount-usd:
          $ref: "#/components/schemas/deal-sold-amount-usd"
        on-offer:
          $ref: "#/components/schemas/deal-on-offer"
        in-arbitration:
          $ref: "#/components/schemas/deal-in-arbitration"
    title-exempt:
      type: boolean
      default: false
      description: Defines whether or not the asset can even have a title.  For
        example a lawn mower would be title exempt.
    title-number:
      type: string
      description: A unique identifier, typically a string of 7-8 digits or
        characters, found on your car's title document.
      example: AV34019
    title-state:
      type: string
      description: The state in which the asset's title was issued.
      example: NC
    title-received-at:
      type: string
      format: date-time
      nullable: true
      description: The date and time at which the title document was received by the
        auction.
    title:
      type: object
      description: Attributes defining the title document for the asset.
      properties:
        exempt:
          $ref: "#/components/schemas/title-exempt"
        number:
          $ref: "#/components/schemas/title-number"
        state:
          $ref: "#/components/schemas/title-state"
        received-at:
          $ref: "#/components/schemas/title-received-at"
    ae.advisory.account.ams:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.advisory.account.ams-detail"
    ae.advisory.account.representatives.ams:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.advisory.account.representatives.ams-detail"
    ae.advisory.account.ams-detail:
      description: Advisory Account event for AMS accounts
      allOf:
        - $ref: "#/components/schemas/common.ams.account-pointer"
        - type: object
          required:
            - auction-id
            - display-name
            - updated-at
          x-entities:
            - ams-account
          properties:
            auction-id:
              $ref: "#/components/schemas/common.ua-id"
            id:
              description: Unique id for this account
              $ref: "#/components/schemas/common.ams.account.id"
            established-at:
              description: The date and time that the record was initially created in the AMS
              type: string
              format: date-time
              example: 2024-05-24T13:19:23.238Z
            display-name:
              description: The display name of the account
              type: string
              example: John Doe
            legal-name:
              description: The legal name of the account
              type: string
              example: John Doe
            dba-name:
              description: The 'doing business as' name of the account
              type: string
              example: John Doe
            primary-email:
              description: Primary email of dealership
              type: string
              format: email
              maxLength: 320
              example: John@JohnsAuto.com
            website-uri:
              type: string
              description: URI dealer website
              example: http://www.johnsauto.com
            primary-phone-number:
              type: string
              description: Main phone number of account
              example: 407-888-1233
            cell-phone-number:
              type: string
              description: Cell phone number on record at AMS for account
              example: 407-888-1233
            primary-fax-number:
              type: string
              description: Fax phone number
              example: 407-888-1233
            physical-location:
              $ref: "#/components/schemas/common.ams.postal-address"
            mailing-location:
              $ref: "#/components/schemas/common.ams.postal-address"
            can-buy:
              type: boolean
              description: True if account is allowed to buy a vehicle, false if not
              example: true
            can-sell:
              type: boolean
              description: True if account is allowed to sell a vehicle, false if not
              example: true
            is-active:
              type: boolean
              description: True if account is active, false if not
              example: true
            is-in-violation:
              type: boolean
              description: True if account is in violation of an auction rule such as expired
                license, false if not
              example: true
            is-tax-exempt:
              type: boolean
              description: True if account is tax exempt, false if not
              example: true
            auction-seller-rep:
              type: string
              description: Auction staff member that assists account selling vehicles
              example: Joe Blout
            auction-buyer-rep:
              type: string
              description: Auction staff member that assists account buying vehicles
              example: Sandy Cheeks
            autoims-id:
              deprecated: true
              type: number
              description: AutoIMS id
              example: 1234567
            autoims-id-str:
              type: string
              description: AutoIMS id
              example: BED1234567
            payment-sources:
              description: The payment sources for the account
              type: array
              items:
                $ref: "#/components/schemas/common.ams.payment-source"
            updated-at:
              type: string
              format: date-time
              description: The time in ISO-8601 formatted at which the record was generated
            initiator:
              $ref: "#/components/schemas/common.initiator"
    ae.advisory.account.representatives.ams-detail:
      additionalProperties: false
      description: Advisory Account Representatives event for AMS accounts
      type: object
      required:
        - auction-id
        - representatives
        - account
        - updated-at
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        account:
          $ref: "#/components/schemas/common.ams.account-pointer"
        updated-at:
          type: string
          format: date-time
          description: The time in ISO-8601 formatted at which the record was generated
        representatives:
          description: The representatives and their permissions for the account
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/common.ams.representative-pointer"
              - type: object
                properties:
                  person-info:
                    $ref: "#/components/schemas/common.ams.person-info"
                  internal-notes:
                    description: Any notes on representative
                    type: string
                    example: Likes to know what his folks are buying and selling
                  can-buy:
                    type: boolean
                    description: True if representative is allowed to buy a vehicle, false if not
                    example: true
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.account.payment-source.upsert.ams:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.account.payment-source.upsert.ams-detail"
    ae.account.payment-source.removed.ams:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.account.payment-source.removed.ams-detail"
    ae.account.payment-source.upsert.ams-detail:
      additionalProperties: false
      description: A payment source has been inserted or updated in the AMS
      type: object
      required:
        - auction-id
        - account
        - display-name
        - payment-source-id
        - payment-vendor-id
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        account:
          $ref: "#/components/schemas/common.ams.account-pointer"
        display-name:
          type: string
          description: display name of the account's payment source
          example: KINETIC ***1234
        payment-source-id:
          $ref: "#/components/schemas/common.ams.payment-source.id"
        payment-vendor-id:
          $ref: "#/components/schemas/common.ams.payment-vendor.id"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.account.payment-source.removed.ams-detail:
      additionalProperties: false
      description: A payment source has been removed in the AMS
      type: object
      required:
        - auction-id
        - account
        - payment-source-id
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        account:
          $ref: "#/components/schemas/common.ams.account-pointer"
        payment-source-id:
          $ref: "#/components/schemas/common.ams.payment-source.id"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.account.representative.payer-authorized:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.account.representative.payer-authorized-detail"
    ae.account.representative.payer-deauthorized:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.account.representative.payer-deauthorized-detail"
    ae.account.representative.payer-authorized-detail:
      additionalProperties: false
      description: A representative has been authorized to pay for an account
      type: object
      required:
        - auction-id
        - account
        - rep-account
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        account:
          $ref: "#/components/schemas/common.ams.account-pointer"
        rep-account:
          $ref: "#/components/schemas/common.ams.rep-pointer"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.account.representative.payer-deauthorized-detail:
      additionalProperties: false
      description: A representative has been de-authorized to pay for an account
      type: object
      required:
        - auction-id
        - account
        - rep-account
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        account:
          $ref: "#/components/schemas/common.ams.account-pointer"
        rep-account:
          $ref: "#/components/schemas/common.ams.rep-pointer"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.account.representative.upserted.ams:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.account.representative.upserted.ams-detail"
    ae.account.representative.removed.ams:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.account.representative.removed.ams-detail"
    ae.account.representative.upserted.ams-detail:
      description: Upserted data for an representative in the AMS
      allOf:
        - $ref: "#/components/schemas/common.ams.representative-pointer"
        - type: object
          required:
            - auction-id
          properties:
            auction-id:
              $ref: "#/components/schemas/common.ua-id"
            account-id:
              description: Account this is a representative of
              $ref: "#/components/schemas/common.ams.account.id"
            person-info:
              $ref: "#/components/schemas/common.ams.person-info"
            internal-notes:
              description: Any notes on representative
              type: string
              example: Likes to know what his folks are buying and selling
            can-buy:
              type: boolean
              description: True if representative is allowed to buy a vehicle, false if not
              example: true
            initiator:
              $ref: "#/components/schemas/common.initiator"
    ae.account.representative.removed.ams-detail:
      additionalProperties: false
      description: Representative has been removed
      type: object
      required:
        - id
        - auction-id
        - account-id
      properties:
        id:
          $ref: "#/components/schemas/common.ams.representative-id"
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        account-id:
          description: Account this is a representative of
          $ref: "#/components/schemas/common.ams.account.id"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.account.upserted.ams:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.account.upserted.ams-detail"
    ae.account.removed.ams:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.account.removed.ams-detail"
    ae.account.upserted.ams-detail:
      description: Upserted data for an account in the AMS
      allOf:
        - $ref: "#/components/schemas/common.ams.account-pointer"
        - type: object
          required:
            - auction-id
            - id
            - display-name
          properties:
            auction-id:
              $ref: "#/components/schemas/common.ua-id"
            id:
              description: Unique id for this account
              $ref: "#/components/schemas/common.ams.account.id"
            established-at:
              description: The date and time that the record was initially created in the AMS
              type: string
              format: date-time
              example: 2024-05-24T13:19:23.238Z
            display-name:
              description: The display name of the account
              type: string
              example: John Doe
            legal-name:
              description: The legal name of the account
              type: string
              example: John Doe
            dba-name:
              description: The 'doing business as' name of the account
              type: string
              example: John Doe
            primary-email:
              description: Primary email of dealership
              type: string
              format: email
              maxLength: 320
              example: John@JohnsAuto.com
            website-uri:
              type: string
              description: URI dealer website
              example: http://www.johnsauto.com
            primary-phone-number:
              type: string
              description: Main phone number of account
              example: 407-888-1233
            cell-phone-number:
              type: string
              description: Cell phone number on record at AMS for account
              example: 407-888-1233
            primary-fax-number:
              type: string
              description: Fax phone number
              example: 407-888-1233
            physical-location:
              $ref: "#/components/schemas/common.ams.postal-address"
            mailing-location:
              $ref: "#/components/schemas/common.ams.postal-address"
            can-buy:
              type: boolean
              description: True if account is allowed to buy a vehicle, false if not
              example: true
            can-sell:
              type: boolean
              description: True if account is allowed to sell a vehicle, false if not
              example: true
            is-active:
              type: boolean
              description: True if account is active, false if not
              example: true
            is-in-violation:
              type: boolean
              description: True if account is in violation of an auction rule such as expired
                license, false if not
              example: true
            is-tax-exempt:
              type: boolean
              description: True if account is tax exempt, false if not
              example: true
            auction-seller-rep:
              type: string
              description: Auction staff member that assists account selling vehicles
              example: Joe Blout
            auction-buyer-rep:
              type: string
              description: Auction staff member that assists account buying vehicles
              example: Sandy Cheeks
            autoims-id:
              deprecated: true
              type: number
              description: AutoIMS id
              example: 1234567
            autoims-id-str:
              type: string
              description: AutoIMS id
              example: BED1234567
            payment-sources:
              description: The payment sources for the account
              type: array
              items:
                $ref: "#/components/schemas/common.ams.payment-source"
            initiator:
              $ref: "#/components/schemas/common.initiator"
    ae.account.removed.ams-detail:
      additionalProperties: false
      description: AMS account has been removed
      type: object
      required:
        - id
        - auction-id
      properties:
        id:
          $ref: "#/components/schemas/common.ams.account.id"
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        account:
          $ref: "#/components/schemas/common.ams.account-pointer"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.gatepass.send-email:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.gatepass.send-email-detail"
    ae.asset.gatepass.created:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.gatepass.created-detail"
    ae.asset.gatepass.voided:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.gatepass.voided-detail"
    ae.asset.gatepass.delivered:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.gatepass.delivered-detail"
    ae.asset.gatepass.buyer.releasable:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.gatepass.buyer.releasable-detail"
    ae.asset.gatepass.buyer.revoked:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.gatepass.buyer.revoked-detail"
    ae.asset.gatepass.send-email-detail:
      additionalProperties: false
      description: Email asset gate pass to the provided email address(es)
      type: object
      required:
        - send-to-email
        - auction-id
        - stock
        - vin
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        vin:
          deprecated: true
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          deprecated: true
          $ref: "#/components/schemas/common.asset.stock"
        initiator-email:
          type: string
          format: email
          maxLength: 320
          description: The email address of the initiator of the gatepass email
            request.  Errors will be sent here.
        send-to-email:
          type: array
          minItems: 1
          items:
            description: The email address to send the gatepass for the given stock number
              to.
            type: string
            maxLength: 320
            format: email
        gatepass-type:
          $ref: "#/components/schemas/gatepass-type"
        senderName:
          type: string
          maxLength: 50
          description: Optional name of the sender.
        initiator:
          $ref: "#/components/schemas/common.initiator"
    gatepass-type:
      description: >
        Allowed values:  
          * 'G' - Buyer or Seller gatepass (depending on asset status) - Default  
          * 'T' - Test drive gatepass  
          * 'R' - Repair gatepass
      type: string
      maxLength: 1
      default: G
      enum:
        - G
        - T
        - R
    ae.asset.gatepass.created-detail:
      additionalProperties: false
      description: Notification that a gatepass document has been created
      type: object
      required:
        - auction-id
        - stock
        - vin
        - download-uri
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        vin:
          deprecated: true
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          deprecated: true
          $ref: "#/components/schemas/common.asset.stock"
        download-uri:
          type: string
          description: URI to download the document
          example: https://downloads.auctionedge.net/raa/5349083/gatepass.pdf
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.gatepass.voided-detail:
      additionalProperties: false
      description: Notification that a gatepass document has been voided
      type: object
      required:
        - auction-id
        - stock
        - vin
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        vin:
          deprecated: true
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          deprecated: true
          $ref: "#/components/schemas/common.asset.stock"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.gatepass.delivered-detail:
      additionalProperties: false
      description: Notification that a gatepass document has been delivered
      type: object
      required:
        - delivery-method
        - targets
        - auction-id
        - stock
        - vin
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        vin:
          deprecated: true
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          deprecated: true
          $ref: "#/components/schemas/common.asset.stock"
        delivery-method:
          description: >
            Allowed values:  
              * 'email' - gatepass delivered via email, targets are the email addresses
          type: string
          enum:
            - email
        targets:
          type: array
          minItems: 1
          items:
            description: Where the gatepass was delivered
            type: string
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.gatepass.buyer.releasable-detail:
      additionalProperties: false
      description: information needed for generating a gatepass
      type: object
      required:
        - auction
        - account
        - asset
        - ams-sale-listing
      properties:
        auction:
          type: object
          description: required info about an auction
          required:
            - id
            - organization-name
            - address
            - city
            - state
            - postal-code
            - phone-number
          properties:
            id:
              $ref: "#/components/schemas/common.ua-id"
            organization-name:
              $ref: "#/components/schemas/organization-name"
            address:
              $ref: "#/components/schemas/address"
            city:
              $ref: "#/components/schemas/city"
            state:
              $ref: "#/components/schemas/state"
            postal-code:
              $ref: "#/components/schemas/postal-code"
            phone-number:
              $ref: "#/components/schemas/phone-number"
        account:
          type: object
          description: The account that the gate pass will be printed for
          required:
            - key
            - organization-name
            - address
            - city
            - state
            - postal-code
            - phone-number
          properties:
            key:
              $ref: "#/components/schemas/common.ams.account.key"
            organization-name:
              $ref: "#/components/schemas/organization-name"
            address:
              $ref: "#/components/schemas/address"
            city:
              $ref: "#/components/schemas/city"
            state:
              $ref: "#/components/schemas/state"
            postal-code:
              $ref: "#/components/schemas/postal-code"
            phone-number:
              $ref: "#/components/schemas/phone-number"
        asset:
          allOf:
            - $ref: "#/components/schemas/common.ams.asset-pointer"
          type: object
          description: The vehicle that the gate pass is for
          required:
            - year
          properties:
            year:
              $ref: "#/components/schemas/common.vehicle.year"
            make:
              type: string
              description: The manufacturer make of the asset
              example: Chevrolet
              nullable: true
            model:
              type: string
              description: The model of the asset
              example: Silverado
              nullable: true
            trimline:
              type: string
              description: The trim of the asset
              example: RST
              nullable: true
            exterior:
              $ref: "#/components/schemas/common.vehicle.exterior"
            current-odometer-reading:
              $ref: "#/components/schemas/common.vehicle.odometer-reading-nullable"
            lot-location:
              type: string
              description: The name of the auction lot assigned to the asset
              example: AA
              nullable: true
        ams-sale-listing:
          type: object
          description: The sale listing information of the asset at time of event
          required:
            - sale-date
            - lane
            - lot
            - announcements
          properties:
            sale-date:
              type: string
              description: The date that the asset has been registered for a sale on
              example: 2024-06-05
            lane:
              type: string
              description: The lane the asset has been assigned to for the sale
              example: D
            lot:
              type: string
              description: The individual id of the asset within the lane
              example: "115"
            announcements:
              type: string
              description: Auction announcements about the asset
              example: As Is, No Arb
        barcode-prefix:
          $ref: "#/components/schemas/barcode-prefix"
        show-vin-barcode:
          $ref: "#/components/schemas/show-vin-barcode"
        notes:
          $ref: "#/components/schemas/notes"
        print-signature-line:
          $ref: "#/components/schemas/print-signature-line"
        print-driver-license-line:
          $ref: "#/components/schemas/print-driver-license-line"
        updated-at:
          $ref: "#/components/schemas/updated-at"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.gatepass.buyer.revoked-detail:
      additionalProperties: false
      description: Gate pass eligibility has been revoked
      required:
        - auction-id
        - asset-id
        - asset-stock
        - buyer-account-key
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        asset-id:
          deprecated: true
          $ref: "#/components/schemas/common.asset.id"
        asset-stock:
          deprecated: true
          $ref: "#/components/schemas/common.asset.stock"
        buyer-account-key:
          $ref: "#/components/schemas/common.ams.account.key"
        updated-at:
          $ref: "#/components/schemas/updated-at"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    organization-name:
      type: string
      description: The name of the account
      example: Richmond Auto Auction
    address:
      type: string
      description: The physical address of the account
      example: 123 East Main Street
    city:
      type: string
      description: The city location of the account
      example: Pensacola
    state:
      type: string
      description: The state location of the account
      example: FL
    postal-code:
      type: string
      description: The zip code of the account
      example: 32503-2411
    phone-number:
      type: string
      description: The phone number of the account
      example: 555-867-5309
    barcode-prefix:
      type: string
      description: The prefix of the string to generate the barcode from
      example: BGP
    show-vin-barcode:
      type: boolean
      description: Flag to show asset VIN on gate pass
      example: false
      default: false
    notes:
      type: string
      description: Text customized by auction to print on gate pass
      example: Once vehicle leaves lot, cannot be arbitrated
    print-signature-line:
      type: boolean
      description: Flag to print a line of signature on gate pass
      example: false
      default: false
    print-driver-license-line:
      type: boolean
      description: Flag to print line on gate pass so write driver license number
      example: true
      default: false
    updated-at:
      type: string
      format: date-time
      description: The updated date time of the deal.
      example: 202-07-24T18:25:43.511Z
    ae.asset.deal.payment.apply-source:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.deal.payment.apply-source-detail"
    ae.asset.deal.payment.status-changed:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.deal.payment.status-changed-detail"
    ae.asset.deal.payment.apply-source-detail:
      additionalProperties: false
      description: Payment source selected by user.
      type: object
      required:
        - auction-id
        - stock
        - vin
        - deal
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset-id:
          $ref: "#/components/schemas/common.asset.id"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        initiator:
          $ref: "#/components/schemas/common.initiator"
        deal:
          type: object
          required:
            - buyer
            - payment
          properties:
            id:
              $ref: "#/components/schemas/common.deal.id"
            buyer:
              $ref: "#/components/schemas/common.ams.account-pointer"
            payment:
              type: object
              required:
                - source-id
              properties:
                source-id:
                  type: string
                  description: Payment Source ID.
                  example: "12345678"
    ae.asset.deal.payment.status-changed-detail:
      additionalProperties: false
      description: Event fired when status of a payment is changing.
      type: object
      required:
        - auction-id
        - asset-id
        - stock
        - vin
        - deal
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset-id:
          $ref: "#/components/schemas/common.asset.id"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        initiator:
          $ref: "#/components/schemas/common.initiator"
        deal:
          type: object
          required:
            - id
            - payment
          properties:
            id:
              $ref: "#/components/schemas/common.deal.id"
            payment:
              type: object
              required:
                - status
                - updated-at
              properties:
                status:
                  type: string
                  enum:
                    - unassigned
                    - assigned
                    - processing
                    - paid
                    - denied
                    - failed
                updated-at:
                  type: string
                  format: date-time
                  description: The time at which the status changed
    ae.asset.deal.offer.made:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.deal.offer.made-detail"
    ae.asset.deal.offer.accepted:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.deal.offer.accepted-detail"
    ae.asset.deal.offer.rejected:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.deal.offer.rejected-detail"
    ae.asset.deal.offer.made-detail:
      additionalProperties: false
      description: Offer made on asset.
      type: object
      required:
        - auction-id
        - stock
        - vin
        - seller
        - buyer
        - sale-date
        - lane
        - lot
        - amount
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        deal-id:
          $ref: "#/components/schemas/common.deal.id"
        vin:
          $ref: "#/components/schemas/common.asset.vin"
        stock:
          $ref: "#/components/schemas/common.asset.stock"
        seller:
          $ref: "#/components/schemas/common.ams.account-pointer"
        buyer:
          $ref: "#/components/schemas/common.ams.account-pointer"
        sale-date:
          $ref: "#/components/schemas/sale-date"
        lane:
          $ref: "#/components/schemas/lane"
        lot:
          $ref: "#/components/schemas/lot"
        amount:
          $ref: "#/components/schemas/amount"
        updated-at:
          $ref: "#/components/schemas/updated-at"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.deal.offer.accepted-detail:
      additionalProperties: false
      description: Event emitted by the AMS when an offer on a deal is accepted.
      type: object
      required:
        - auction-id
        - asset
        - seller
        - buyer
        - sale-date
        - lane
        - lot
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        deal-id:
          $ref: "#/components/schemas/common.deal.id"
        seller:
          $ref: "#/components/schemas/common.ams.account-pointer"
        buyer:
          $ref: "#/components/schemas/common.ams.account-pointer"
        sale-date:
          $ref: "#/components/schemas/sale-date"
        lane:
          $ref: "#/components/schemas/lane"
        lot:
          $ref: "#/components/schemas/lot"
        amount:
          $ref: "#/components/schemas/amount"
        updated-at:
          $ref: "#/components/schemas/updated-at"
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.deal.offer.rejected-detail:
      additionalProperties: false
      description: Event emitted by the AMS when an offer on a deal is rejected.
      type: object
      required:
        - auction-id
        - asset
        - seller
        - buyer
        - sale-date
        - lane
        - lot
        - rejected-reason
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        deal-id:
          $ref: "#/components/schemas/common.deal.id"
        seller:
          $ref: "#/components/schemas/common.ams.account-pointer"
        buyer:
          $ref: "#/components/schemas/common.ams.account-pointer"
        sale-date:
          $ref: "#/components/schemas/sale-date"
        lane:
          $ref: "#/components/schemas/lane"
        lot:
          $ref: "#/components/schemas/lot"
        amount:
          $ref: "#/components/schemas/amount"
        updated-at:
          $ref: "#/components/schemas/updated-at"
        rejected-reason:
          type: string
          description: The reason the offer was rejected
        initiator:
          $ref: "#/components/schemas/common.initiator"
    ae.asset.deal.charge.upsert:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.deal.charge.upsert-detail"
    ae.asset.deal.charge.removed:
      type: object
      additionalProperties: false
      description: Notification that a service order has been placed
      allOf:
        - $ref: "#/components/schemas/BaseEdgeEvent"
      required:
        - detail
      properties:
        detail:
          $ref: "#/components/schemas/ae.asset.deal.charge.removed-detail"
    ae.asset.deal.charge.upsert-detail:
      additionalProperties: false
      description: Vehicle charge upsert event.
      type: object
      required:
        - auction-id
        - asset-id
        - stock
        - vin
        - account
        - charge
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        deal-id:
          $ref: "#/components/schemas/common.deal.id"
        asset-id:
          deprecated: true
          $ref: "#/components/schemas/common.asset.id"
        stock:
          deprecated: true
          $ref: "#/components/schemas/common.asset.stock"
        vin:
          deprecated: true
          $ref: "#/components/schemas/common.asset.vin"
        account:
          $ref: "#/components/schemas/common.ams.account-pointer"
        initiator:
          $ref: "#/components/schemas/common.initiator"
        charge:
          description: Charge details
          type: object
          required:
            - id
            - display-name
            - charge-type
            - amount
          properties:
            id:
              type: string
              description: Charge ID.
              example: MychargeID123
            display-name:
              type: string
              description: Charge ID Description.
              example: Flooring plan
            charge-type:
              type: string
              description: Type of charge.
              enum:
                - buy
                - credit_card
                - dealshield
                - floorplan
                - fuel
                - misc
                - post_sale_inspection
                - sales_tax
                - sell
                - simulcast
                - transportation
            amount:
              $ref: "#/components/schemas/common.currency"
    ae.asset.deal.charge.removed-detail:
      additionalProperties: false
      description: Vehicle charge removed event.
      type: object
      required:
        - auction-id
        - asset-id
        - charge-id
      properties:
        auction-id:
          $ref: "#/components/schemas/common.ua-id"
        asset:
          $ref: "#/components/schemas/common.ams.asset-pointer"
        deal-id:
          $ref: "#/components/schemas/common.deal.id"
        asset-id:
          deprecated: true
          $ref: "#/components/schemas/common.asset.id"
        charge-id:
          type: string
          description: Charge ID.
          example: MychargeID123
        initiator:
          $ref: "#/components/schemas/common.initiator"
    sale-date:
      type: string
      format: date
      description: The sale date of the deal.
      example: 2024-07-24
    lane:
      type: string
      description: The lane the asset was in when deal made.
      example: A
    lot:
      type: string
      description: The lot the asset was in when deal made.
      example: "0001"
    amount:
      type: number
      description: The amount the asset sold for.
      example: 12345.67
