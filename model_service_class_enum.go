/*
Edge Event Schemas

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
	"fmt"
)

// ServiceClassEnum Service class
type ServiceClassEnum string

// List of service-class-enum
const (
	PSI ServiceClassEnum = "psi"
	TRANSPORTATION ServiceClassEnum = "transportation"
)

// All allowed values of ServiceClassEnum enum
var AllowedServiceClassEnumEnumValues = []ServiceClassEnum{
	"psi",
	"transportation",
}

func (v *ServiceClassEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ServiceClassEnum(value)
	for _, existing := range AllowedServiceClassEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ServiceClassEnum", value)
}

// NewServiceClassEnumFromValue returns a pointer to a valid ServiceClassEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewServiceClassEnumFromValue(v string) (*ServiceClassEnum, error) {
	ev := ServiceClassEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ServiceClassEnum: valid values are %v", v, AllowedServiceClassEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ServiceClassEnum) IsValid() bool {
	for _, existing := range AllowedServiceClassEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to service-class-enum value
func (v ServiceClassEnum) Ptr() *ServiceClassEnum {
	return &v
}

type NullableServiceClassEnum struct {
	value *ServiceClassEnum
	isSet bool
}

func (v NullableServiceClassEnum) Get() *ServiceClassEnum {
	return v.value
}

func (v *NullableServiceClassEnum) Set(val *ServiceClassEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceClassEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceClassEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceClassEnum(val *ServiceClassEnum) *NullableServiceClassEnum {
	return &NullableServiceClassEnum{value: val, isSet: true}
}

func (v NullableServiceClassEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceClassEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

