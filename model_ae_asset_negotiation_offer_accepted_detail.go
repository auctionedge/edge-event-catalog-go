/*
Edge Event Schemas

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AeAssetNegotiationOfferAcceptedDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AeAssetNegotiationOfferAcceptedDetail{}

// AeAssetNegotiationOfferAcceptedDetail emitted by the negotiation service when an offer is accepted.
type AeAssetNegotiationOfferAcceptedDetail struct {
	// Auction Edge unique identifier for an auction.
	AuctionId string `json:"auction-id"`
	// Uniquie identifier for a specific negotiation.
	NegotiationId string `json:"negotiation-id"`
	// unique identifier of the offer that is being accepted
	AcceptedOfferId string `json:"accepted-offer-id"`
	Asset CommonAmsAssetPointer `json:"asset"`
	Offer AeAssetNegotiationOfferAcceptedDetailOffer `json:"offer"`
	Initiator *CommonInitiator `json:"initiator,omitempty"`
}

type _AeAssetNegotiationOfferAcceptedDetail AeAssetNegotiationOfferAcceptedDetail

// NewAeAssetNegotiationOfferAcceptedDetail instantiates a new AeAssetNegotiationOfferAcceptedDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAeAssetNegotiationOfferAcceptedDetail(auctionId string, negotiationId string, acceptedOfferId string, asset CommonAmsAssetPointer, offer AeAssetNegotiationOfferAcceptedDetailOffer) *AeAssetNegotiationOfferAcceptedDetail {
	this := AeAssetNegotiationOfferAcceptedDetail{}
	this.AuctionId = auctionId
	this.NegotiationId = negotiationId
	this.AcceptedOfferId = acceptedOfferId
	this.Asset = asset
	this.Offer = offer
	return &this
}

// NewAeAssetNegotiationOfferAcceptedDetailWithDefaults instantiates a new AeAssetNegotiationOfferAcceptedDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAeAssetNegotiationOfferAcceptedDetailWithDefaults() *AeAssetNegotiationOfferAcceptedDetail {
	this := AeAssetNegotiationOfferAcceptedDetail{}
	return &this
}

// GetAuctionId returns the AuctionId field value
func (o *AeAssetNegotiationOfferAcceptedDetail) GetAuctionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuctionId
}

// GetAuctionIdOk returns a tuple with the AuctionId field value
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationOfferAcceptedDetail) GetAuctionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuctionId, true
}

// SetAuctionId sets field value
func (o *AeAssetNegotiationOfferAcceptedDetail) SetAuctionId(v string) {
	o.AuctionId = v
}

// GetNegotiationId returns the NegotiationId field value
func (o *AeAssetNegotiationOfferAcceptedDetail) GetNegotiationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NegotiationId
}

// GetNegotiationIdOk returns a tuple with the NegotiationId field value
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationOfferAcceptedDetail) GetNegotiationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NegotiationId, true
}

// SetNegotiationId sets field value
func (o *AeAssetNegotiationOfferAcceptedDetail) SetNegotiationId(v string) {
	o.NegotiationId = v
}

// GetAcceptedOfferId returns the AcceptedOfferId field value
func (o *AeAssetNegotiationOfferAcceptedDetail) GetAcceptedOfferId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AcceptedOfferId
}

// GetAcceptedOfferIdOk returns a tuple with the AcceptedOfferId field value
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationOfferAcceptedDetail) GetAcceptedOfferIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AcceptedOfferId, true
}

// SetAcceptedOfferId sets field value
func (o *AeAssetNegotiationOfferAcceptedDetail) SetAcceptedOfferId(v string) {
	o.AcceptedOfferId = v
}

// GetAsset returns the Asset field value
func (o *AeAssetNegotiationOfferAcceptedDetail) GetAsset() CommonAmsAssetPointer {
	if o == nil {
		var ret CommonAmsAssetPointer
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationOfferAcceptedDetail) GetAssetOk() (*CommonAmsAssetPointer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *AeAssetNegotiationOfferAcceptedDetail) SetAsset(v CommonAmsAssetPointer) {
	o.Asset = v
}

// GetOffer returns the Offer field value
func (o *AeAssetNegotiationOfferAcceptedDetail) GetOffer() AeAssetNegotiationOfferAcceptedDetailOffer {
	if o == nil {
		var ret AeAssetNegotiationOfferAcceptedDetailOffer
		return ret
	}

	return o.Offer
}

// GetOfferOk returns a tuple with the Offer field value
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationOfferAcceptedDetail) GetOfferOk() (*AeAssetNegotiationOfferAcceptedDetailOffer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Offer, true
}

// SetOffer sets field value
func (o *AeAssetNegotiationOfferAcceptedDetail) SetOffer(v AeAssetNegotiationOfferAcceptedDetailOffer) {
	o.Offer = v
}

// GetInitiator returns the Initiator field value if set, zero value otherwise.
func (o *AeAssetNegotiationOfferAcceptedDetail) GetInitiator() CommonInitiator {
	if o == nil || IsNil(o.Initiator) {
		var ret CommonInitiator
		return ret
	}
	return *o.Initiator
}

// GetInitiatorOk returns a tuple with the Initiator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationOfferAcceptedDetail) GetInitiatorOk() (*CommonInitiator, bool) {
	if o == nil || IsNil(o.Initiator) {
		return nil, false
	}
	return o.Initiator, true
}

// HasInitiator returns a boolean if a field has been set.
func (o *AeAssetNegotiationOfferAcceptedDetail) HasInitiator() bool {
	if o != nil && !IsNil(o.Initiator) {
		return true
	}

	return false
}

// SetInitiator gets a reference to the given CommonInitiator and assigns it to the Initiator field.
func (o *AeAssetNegotiationOfferAcceptedDetail) SetInitiator(v CommonInitiator) {
	o.Initiator = &v
}

func (o AeAssetNegotiationOfferAcceptedDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AeAssetNegotiationOfferAcceptedDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["auction-id"] = o.AuctionId
	toSerialize["negotiation-id"] = o.NegotiationId
	toSerialize["accepted-offer-id"] = o.AcceptedOfferId
	toSerialize["asset"] = o.Asset
	toSerialize["offer"] = o.Offer
	if !IsNil(o.Initiator) {
		toSerialize["initiator"] = o.Initiator
	}
	return toSerialize, nil
}

func (o *AeAssetNegotiationOfferAcceptedDetail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"auction-id",
		"negotiation-id",
		"accepted-offer-id",
		"asset",
		"offer",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAeAssetNegotiationOfferAcceptedDetail := _AeAssetNegotiationOfferAcceptedDetail{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAeAssetNegotiationOfferAcceptedDetail)

	if err != nil {
		return err
	}

	*o = AeAssetNegotiationOfferAcceptedDetail(varAeAssetNegotiationOfferAcceptedDetail)

	return err
}

type NullableAeAssetNegotiationOfferAcceptedDetail struct {
	value *AeAssetNegotiationOfferAcceptedDetail
	isSet bool
}

func (v NullableAeAssetNegotiationOfferAcceptedDetail) Get() *AeAssetNegotiationOfferAcceptedDetail {
	return v.value
}

func (v *NullableAeAssetNegotiationOfferAcceptedDetail) Set(val *AeAssetNegotiationOfferAcceptedDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableAeAssetNegotiationOfferAcceptedDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableAeAssetNegotiationOfferAcceptedDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAeAssetNegotiationOfferAcceptedDetail(val *AeAssetNegotiationOfferAcceptedDetail) *NullableAeAssetNegotiationOfferAcceptedDetail {
	return &NullableAeAssetNegotiationOfferAcceptedDetail{value: val, isSet: true}
}

func (v NullableAeAssetNegotiationOfferAcceptedDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAeAssetNegotiationOfferAcceptedDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


