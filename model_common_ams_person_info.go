/*
Edge Event Schemas

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
)

// checks if the CommonAmsPersonInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonAmsPersonInfo{}

// CommonAmsPersonInfo Common person properties that an AMS would produce
type CommonAmsPersonInfo struct {
	// Representative first name
	FirstName *string `json:"first-name,omitempty"`
	// Representative Last name
	LastName *string `json:"last-name,omitempty"`
	// Representative nickname
	Nickname *string `json:"nickname,omitempty"`
	// Representative title
	Title *string `json:"title,omitempty"`
	// Home phone number of representative
	HomePhoneNumber *string `json:"home-phone-number,omitempty"`
	// Cell phone number of representative
	CellPhoneNumber *string `json:"cell-phone-number,omitempty"`
	// Fax phone number of representative
	FaxNumber *string `json:"fax-number,omitempty"`
	// Email of representative
	Email *string `json:"email,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonAmsPersonInfo CommonAmsPersonInfo

// NewCommonAmsPersonInfo instantiates a new CommonAmsPersonInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonAmsPersonInfo() *CommonAmsPersonInfo {
	this := CommonAmsPersonInfo{}
	return &this
}

// NewCommonAmsPersonInfoWithDefaults instantiates a new CommonAmsPersonInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonAmsPersonInfoWithDefaults() *CommonAmsPersonInfo {
	this := CommonAmsPersonInfo{}
	return &this
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *CommonAmsPersonInfo) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonAmsPersonInfo) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *CommonAmsPersonInfo) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *CommonAmsPersonInfo) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *CommonAmsPersonInfo) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonAmsPersonInfo) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *CommonAmsPersonInfo) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *CommonAmsPersonInfo) SetLastName(v string) {
	o.LastName = &v
}

// GetNickname returns the Nickname field value if set, zero value otherwise.
func (o *CommonAmsPersonInfo) GetNickname() string {
	if o == nil || IsNil(o.Nickname) {
		var ret string
		return ret
	}
	return *o.Nickname
}

// GetNicknameOk returns a tuple with the Nickname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonAmsPersonInfo) GetNicknameOk() (*string, bool) {
	if o == nil || IsNil(o.Nickname) {
		return nil, false
	}
	return o.Nickname, true
}

// HasNickname returns a boolean if a field has been set.
func (o *CommonAmsPersonInfo) HasNickname() bool {
	if o != nil && !IsNil(o.Nickname) {
		return true
	}

	return false
}

// SetNickname gets a reference to the given string and assigns it to the Nickname field.
func (o *CommonAmsPersonInfo) SetNickname(v string) {
	o.Nickname = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CommonAmsPersonInfo) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonAmsPersonInfo) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CommonAmsPersonInfo) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CommonAmsPersonInfo) SetTitle(v string) {
	o.Title = &v
}

// GetHomePhoneNumber returns the HomePhoneNumber field value if set, zero value otherwise.
func (o *CommonAmsPersonInfo) GetHomePhoneNumber() string {
	if o == nil || IsNil(o.HomePhoneNumber) {
		var ret string
		return ret
	}
	return *o.HomePhoneNumber
}

// GetHomePhoneNumberOk returns a tuple with the HomePhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonAmsPersonInfo) GetHomePhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.HomePhoneNumber) {
		return nil, false
	}
	return o.HomePhoneNumber, true
}

// HasHomePhoneNumber returns a boolean if a field has been set.
func (o *CommonAmsPersonInfo) HasHomePhoneNumber() bool {
	if o != nil && !IsNil(o.HomePhoneNumber) {
		return true
	}

	return false
}

// SetHomePhoneNumber gets a reference to the given string and assigns it to the HomePhoneNumber field.
func (o *CommonAmsPersonInfo) SetHomePhoneNumber(v string) {
	o.HomePhoneNumber = &v
}

// GetCellPhoneNumber returns the CellPhoneNumber field value if set, zero value otherwise.
func (o *CommonAmsPersonInfo) GetCellPhoneNumber() string {
	if o == nil || IsNil(o.CellPhoneNumber) {
		var ret string
		return ret
	}
	return *o.CellPhoneNumber
}

// GetCellPhoneNumberOk returns a tuple with the CellPhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonAmsPersonInfo) GetCellPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CellPhoneNumber) {
		return nil, false
	}
	return o.CellPhoneNumber, true
}

// HasCellPhoneNumber returns a boolean if a field has been set.
func (o *CommonAmsPersonInfo) HasCellPhoneNumber() bool {
	if o != nil && !IsNil(o.CellPhoneNumber) {
		return true
	}

	return false
}

// SetCellPhoneNumber gets a reference to the given string and assigns it to the CellPhoneNumber field.
func (o *CommonAmsPersonInfo) SetCellPhoneNumber(v string) {
	o.CellPhoneNumber = &v
}

// GetFaxNumber returns the FaxNumber field value if set, zero value otherwise.
func (o *CommonAmsPersonInfo) GetFaxNumber() string {
	if o == nil || IsNil(o.FaxNumber) {
		var ret string
		return ret
	}
	return *o.FaxNumber
}

// GetFaxNumberOk returns a tuple with the FaxNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonAmsPersonInfo) GetFaxNumberOk() (*string, bool) {
	if o == nil || IsNil(o.FaxNumber) {
		return nil, false
	}
	return o.FaxNumber, true
}

// HasFaxNumber returns a boolean if a field has been set.
func (o *CommonAmsPersonInfo) HasFaxNumber() bool {
	if o != nil && !IsNil(o.FaxNumber) {
		return true
	}

	return false
}

// SetFaxNumber gets a reference to the given string and assigns it to the FaxNumber field.
func (o *CommonAmsPersonInfo) SetFaxNumber(v string) {
	o.FaxNumber = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *CommonAmsPersonInfo) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonAmsPersonInfo) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *CommonAmsPersonInfo) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *CommonAmsPersonInfo) SetEmail(v string) {
	o.Email = &v
}

func (o CommonAmsPersonInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonAmsPersonInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FirstName) {
		toSerialize["first-name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last-name"] = o.LastName
	}
	if !IsNil(o.Nickname) {
		toSerialize["nickname"] = o.Nickname
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.HomePhoneNumber) {
		toSerialize["home-phone-number"] = o.HomePhoneNumber
	}
	if !IsNil(o.CellPhoneNumber) {
		toSerialize["cell-phone-number"] = o.CellPhoneNumber
	}
	if !IsNil(o.FaxNumber) {
		toSerialize["fax-number"] = o.FaxNumber
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonAmsPersonInfo) UnmarshalJSON(data []byte) (err error) {
	varCommonAmsPersonInfo := _CommonAmsPersonInfo{}

	err = json.Unmarshal(data, &varCommonAmsPersonInfo)

	if err != nil {
		return err
	}

	*o = CommonAmsPersonInfo(varCommonAmsPersonInfo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "first-name")
		delete(additionalProperties, "last-name")
		delete(additionalProperties, "nickname")
		delete(additionalProperties, "title")
		delete(additionalProperties, "home-phone-number")
		delete(additionalProperties, "cell-phone-number")
		delete(additionalProperties, "fax-number")
		delete(additionalProperties, "email")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonAmsPersonInfo struct {
	value *CommonAmsPersonInfo
	isSet bool
}

func (v NullableCommonAmsPersonInfo) Get() *CommonAmsPersonInfo {
	return v.value
}

func (v *NullableCommonAmsPersonInfo) Set(val *CommonAmsPersonInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonAmsPersonInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonAmsPersonInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonAmsPersonInfo(val *CommonAmsPersonInfo) *NullableCommonAmsPersonInfo {
	return &NullableCommonAmsPersonInfo{value: val, isSet: true}
}

func (v NullableCommonAmsPersonInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonAmsPersonInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


