/*
Edge Event Schemas

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AeAssetGatepassBuyerReleasableDetailAsset type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AeAssetGatepassBuyerReleasableDetailAsset{}

// AeAssetGatepassBuyerReleasableDetailAsset The vehicle that the gate pass is for
type AeAssetGatepassBuyerReleasableDetailAsset struct {
	// The year the vehicle was manufactured.
	Year int32 `json:"year"`
	// The manufacturer make of the asset
	Make NullableString `json:"make,omitempty"`
	// The model of the asset
	Model NullableString `json:"model,omitempty"`
	// The trim of the asset
	Trimline NullableString `json:"trimline,omitempty"`
	Exterior *CommonVehicleExterior `json:"exterior,omitempty"`
	// The vehicle's odometer reading
	CurrentOdometerReading NullableFloat32 `json:"current-odometer-reading,omitempty"`
	// The name of the auction lot assigned to the asset
	LotLocation NullableString `json:"lot-location,omitempty"`
	// Source's unique identifier for asset
	Id string `json:"id"`
	// The stock number of the asset.
	Stock string `json:"stock"`
	// The Vehicle Identification Number(VIN) of the asset.
	Vin string `json:"vin"`
}

type _AeAssetGatepassBuyerReleasableDetailAsset AeAssetGatepassBuyerReleasableDetailAsset

// NewAeAssetGatepassBuyerReleasableDetailAsset instantiates a new AeAssetGatepassBuyerReleasableDetailAsset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAeAssetGatepassBuyerReleasableDetailAsset(year int32, id string, stock string, vin string) *AeAssetGatepassBuyerReleasableDetailAsset {
	this := AeAssetGatepassBuyerReleasableDetailAsset{}
	this.Id = id
	this.Stock = stock
	this.Vin = vin
	return &this
}

// NewAeAssetGatepassBuyerReleasableDetailAssetWithDefaults instantiates a new AeAssetGatepassBuyerReleasableDetailAsset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAeAssetGatepassBuyerReleasableDetailAssetWithDefaults() *AeAssetGatepassBuyerReleasableDetailAsset {
	this := AeAssetGatepassBuyerReleasableDetailAsset{}
	return &this
}

// GetYear returns the Year field value
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetYear() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Year
}

// GetYearOk returns a tuple with the Year field value
// and a boolean to check if the value has been set.
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetYearOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Year, true
}

// SetYear sets field value
func (o *AeAssetGatepassBuyerReleasableDetailAsset) SetYear(v int32) {
	o.Year = v
}

// GetMake returns the Make field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetMake() string {
	if o == nil || IsNil(o.Make.Get()) {
		var ret string
		return ret
	}
	return *o.Make.Get()
}

// GetMakeOk returns a tuple with the Make field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetMakeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Make.Get(), o.Make.IsSet()
}

// HasMake returns a boolean if a field has been set.
func (o *AeAssetGatepassBuyerReleasableDetailAsset) HasMake() bool {
	if o != nil && o.Make.IsSet() {
		return true
	}

	return false
}

// SetMake gets a reference to the given NullableString and assigns it to the Make field.
func (o *AeAssetGatepassBuyerReleasableDetailAsset) SetMake(v string) {
	o.Make.Set(&v)
}
// SetMakeNil sets the value for Make to be an explicit nil
func (o *AeAssetGatepassBuyerReleasableDetailAsset) SetMakeNil() {
	o.Make.Set(nil)
}

// UnsetMake ensures that no value is present for Make, not even an explicit nil
func (o *AeAssetGatepassBuyerReleasableDetailAsset) UnsetMake() {
	o.Make.Unset()
}

// GetModel returns the Model field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetModel() string {
	if o == nil || IsNil(o.Model.Get()) {
		var ret string
		return ret
	}
	return *o.Model.Get()
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Model.Get(), o.Model.IsSet()
}

// HasModel returns a boolean if a field has been set.
func (o *AeAssetGatepassBuyerReleasableDetailAsset) HasModel() bool {
	if o != nil && o.Model.IsSet() {
		return true
	}

	return false
}

// SetModel gets a reference to the given NullableString and assigns it to the Model field.
func (o *AeAssetGatepassBuyerReleasableDetailAsset) SetModel(v string) {
	o.Model.Set(&v)
}
// SetModelNil sets the value for Model to be an explicit nil
func (o *AeAssetGatepassBuyerReleasableDetailAsset) SetModelNil() {
	o.Model.Set(nil)
}

// UnsetModel ensures that no value is present for Model, not even an explicit nil
func (o *AeAssetGatepassBuyerReleasableDetailAsset) UnsetModel() {
	o.Model.Unset()
}

// GetTrimline returns the Trimline field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetTrimline() string {
	if o == nil || IsNil(o.Trimline.Get()) {
		var ret string
		return ret
	}
	return *o.Trimline.Get()
}

// GetTrimlineOk returns a tuple with the Trimline field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetTrimlineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Trimline.Get(), o.Trimline.IsSet()
}

// HasTrimline returns a boolean if a field has been set.
func (o *AeAssetGatepassBuyerReleasableDetailAsset) HasTrimline() bool {
	if o != nil && o.Trimline.IsSet() {
		return true
	}

	return false
}

// SetTrimline gets a reference to the given NullableString and assigns it to the Trimline field.
func (o *AeAssetGatepassBuyerReleasableDetailAsset) SetTrimline(v string) {
	o.Trimline.Set(&v)
}
// SetTrimlineNil sets the value for Trimline to be an explicit nil
func (o *AeAssetGatepassBuyerReleasableDetailAsset) SetTrimlineNil() {
	o.Trimline.Set(nil)
}

// UnsetTrimline ensures that no value is present for Trimline, not even an explicit nil
func (o *AeAssetGatepassBuyerReleasableDetailAsset) UnsetTrimline() {
	o.Trimline.Unset()
}

// GetExterior returns the Exterior field value if set, zero value otherwise.
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetExterior() CommonVehicleExterior {
	if o == nil || IsNil(o.Exterior) {
		var ret CommonVehicleExterior
		return ret
	}
	return *o.Exterior
}

// GetExteriorOk returns a tuple with the Exterior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetExteriorOk() (*CommonVehicleExterior, bool) {
	if o == nil || IsNil(o.Exterior) {
		return nil, false
	}
	return o.Exterior, true
}

// HasExterior returns a boolean if a field has been set.
func (o *AeAssetGatepassBuyerReleasableDetailAsset) HasExterior() bool {
	if o != nil && !IsNil(o.Exterior) {
		return true
	}

	return false
}

// SetExterior gets a reference to the given CommonVehicleExterior and assigns it to the Exterior field.
func (o *AeAssetGatepassBuyerReleasableDetailAsset) SetExterior(v CommonVehicleExterior) {
	o.Exterior = &v
}

// GetCurrentOdometerReading returns the CurrentOdometerReading field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetCurrentOdometerReading() float32 {
	if o == nil || IsNil(o.CurrentOdometerReading.Get()) {
		var ret float32
		return ret
	}
	return *o.CurrentOdometerReading.Get()
}

// GetCurrentOdometerReadingOk returns a tuple with the CurrentOdometerReading field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetCurrentOdometerReadingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrentOdometerReading.Get(), o.CurrentOdometerReading.IsSet()
}

// HasCurrentOdometerReading returns a boolean if a field has been set.
func (o *AeAssetGatepassBuyerReleasableDetailAsset) HasCurrentOdometerReading() bool {
	if o != nil && o.CurrentOdometerReading.IsSet() {
		return true
	}

	return false
}

// SetCurrentOdometerReading gets a reference to the given NullableFloat32 and assigns it to the CurrentOdometerReading field.
func (o *AeAssetGatepassBuyerReleasableDetailAsset) SetCurrentOdometerReading(v float32) {
	o.CurrentOdometerReading.Set(&v)
}
// SetCurrentOdometerReadingNil sets the value for CurrentOdometerReading to be an explicit nil
func (o *AeAssetGatepassBuyerReleasableDetailAsset) SetCurrentOdometerReadingNil() {
	o.CurrentOdometerReading.Set(nil)
}

// UnsetCurrentOdometerReading ensures that no value is present for CurrentOdometerReading, not even an explicit nil
func (o *AeAssetGatepassBuyerReleasableDetailAsset) UnsetCurrentOdometerReading() {
	o.CurrentOdometerReading.Unset()
}

// GetLotLocation returns the LotLocation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetLotLocation() string {
	if o == nil || IsNil(o.LotLocation.Get()) {
		var ret string
		return ret
	}
	return *o.LotLocation.Get()
}

// GetLotLocationOk returns a tuple with the LotLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetLotLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LotLocation.Get(), o.LotLocation.IsSet()
}

// HasLotLocation returns a boolean if a field has been set.
func (o *AeAssetGatepassBuyerReleasableDetailAsset) HasLotLocation() bool {
	if o != nil && o.LotLocation.IsSet() {
		return true
	}

	return false
}

// SetLotLocation gets a reference to the given NullableString and assigns it to the LotLocation field.
func (o *AeAssetGatepassBuyerReleasableDetailAsset) SetLotLocation(v string) {
	o.LotLocation.Set(&v)
}
// SetLotLocationNil sets the value for LotLocation to be an explicit nil
func (o *AeAssetGatepassBuyerReleasableDetailAsset) SetLotLocationNil() {
	o.LotLocation.Set(nil)
}

// UnsetLotLocation ensures that no value is present for LotLocation, not even an explicit nil
func (o *AeAssetGatepassBuyerReleasableDetailAsset) UnsetLotLocation() {
	o.LotLocation.Unset()
}

// GetId returns the Id field value
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AeAssetGatepassBuyerReleasableDetailAsset) SetId(v string) {
	o.Id = v
}

// GetStock returns the Stock field value
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetStock() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Stock
}

// GetStockOk returns a tuple with the Stock field value
// and a boolean to check if the value has been set.
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetStockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stock, true
}

// SetStock sets field value
func (o *AeAssetGatepassBuyerReleasableDetailAsset) SetStock(v string) {
	o.Stock = v
}

// GetVin returns the Vin field value
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetVin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Vin
}

// GetVinOk returns a tuple with the Vin field value
// and a boolean to check if the value has been set.
func (o *AeAssetGatepassBuyerReleasableDetailAsset) GetVinOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Vin, true
}

// SetVin sets field value
func (o *AeAssetGatepassBuyerReleasableDetailAsset) SetVin(v string) {
	o.Vin = v
}

func (o AeAssetGatepassBuyerReleasableDetailAsset) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AeAssetGatepassBuyerReleasableDetailAsset) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["year"] = o.Year
	if o.Make.IsSet() {
		toSerialize["make"] = o.Make.Get()
	}
	if o.Model.IsSet() {
		toSerialize["model"] = o.Model.Get()
	}
	if o.Trimline.IsSet() {
		toSerialize["trimline"] = o.Trimline.Get()
	}
	if !IsNil(o.Exterior) {
		toSerialize["exterior"] = o.Exterior
	}
	if o.CurrentOdometerReading.IsSet() {
		toSerialize["current-odometer-reading"] = o.CurrentOdometerReading.Get()
	}
	if o.LotLocation.IsSet() {
		toSerialize["lot-location"] = o.LotLocation.Get()
	}
	toSerialize["id"] = o.Id
	toSerialize["stock"] = o.Stock
	toSerialize["vin"] = o.Vin
	return toSerialize, nil
}

func (o *AeAssetGatepassBuyerReleasableDetailAsset) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"year",
		"id",
		"stock",
		"vin",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAeAssetGatepassBuyerReleasableDetailAsset := _AeAssetGatepassBuyerReleasableDetailAsset{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAeAssetGatepassBuyerReleasableDetailAsset)

	if err != nil {
		return err
	}

	*o = AeAssetGatepassBuyerReleasableDetailAsset(varAeAssetGatepassBuyerReleasableDetailAsset)

	return err
}

type NullableAeAssetGatepassBuyerReleasableDetailAsset struct {
	value *AeAssetGatepassBuyerReleasableDetailAsset
	isSet bool
}

func (v NullableAeAssetGatepassBuyerReleasableDetailAsset) Get() *AeAssetGatepassBuyerReleasableDetailAsset {
	return v.value
}

func (v *NullableAeAssetGatepassBuyerReleasableDetailAsset) Set(val *AeAssetGatepassBuyerReleasableDetailAsset) {
	v.value = val
	v.isSet = true
}

func (v NullableAeAssetGatepassBuyerReleasableDetailAsset) IsSet() bool {
	return v.isSet
}

func (v *NullableAeAssetGatepassBuyerReleasableDetailAsset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAeAssetGatepassBuyerReleasableDetailAsset(val *AeAssetGatepassBuyerReleasableDetailAsset) *NullableAeAssetGatepassBuyerReleasableDetailAsset {
	return &NullableAeAssetGatepassBuyerReleasableDetailAsset{value: val, isSet: true}
}

func (v NullableAeAssetGatepassBuyerReleasableDetailAsset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAeAssetGatepassBuyerReleasableDetailAsset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


