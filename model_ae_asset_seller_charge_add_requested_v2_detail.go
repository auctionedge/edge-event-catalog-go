/*
Edge Event Schemas

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AeAssetSellerChargeAddRequestedV2Detail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AeAssetSellerChargeAddRequestedV2Detail{}

// AeAssetSellerChargeAddRequestedV2Detail A request for a charge to be added to an asset for a seller.
type AeAssetSellerChargeAddRequestedV2Detail struct {
	// Auction Edge unique identifier for an auction.
	AuctionId string `json:"auction-id"`
	Asset CommonAmsAssetPointer `json:"asset"`
	Seller CommonAmsAccountPointer `json:"seller"`
	// Identifier that can be used to identify this event in a response event.
	ReferenceId string `json:"reference-id"`
	Charge CommonCharge `json:"charge"`
	Initiator *CommonInitiator `json:"initiator,omitempty"`
}

type _AeAssetSellerChargeAddRequestedV2Detail AeAssetSellerChargeAddRequestedV2Detail

// NewAeAssetSellerChargeAddRequestedV2Detail instantiates a new AeAssetSellerChargeAddRequestedV2Detail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAeAssetSellerChargeAddRequestedV2Detail(auctionId string, asset CommonAmsAssetPointer, seller CommonAmsAccountPointer, referenceId string, charge CommonCharge) *AeAssetSellerChargeAddRequestedV2Detail {
	this := AeAssetSellerChargeAddRequestedV2Detail{}
	this.AuctionId = auctionId
	this.Asset = asset
	this.Seller = seller
	this.ReferenceId = referenceId
	this.Charge = charge
	return &this
}

// NewAeAssetSellerChargeAddRequestedV2DetailWithDefaults instantiates a new AeAssetSellerChargeAddRequestedV2Detail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAeAssetSellerChargeAddRequestedV2DetailWithDefaults() *AeAssetSellerChargeAddRequestedV2Detail {
	this := AeAssetSellerChargeAddRequestedV2Detail{}
	return &this
}

// GetAuctionId returns the AuctionId field value
func (o *AeAssetSellerChargeAddRequestedV2Detail) GetAuctionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuctionId
}

// GetAuctionIdOk returns a tuple with the AuctionId field value
// and a boolean to check if the value has been set.
func (o *AeAssetSellerChargeAddRequestedV2Detail) GetAuctionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuctionId, true
}

// SetAuctionId sets field value
func (o *AeAssetSellerChargeAddRequestedV2Detail) SetAuctionId(v string) {
	o.AuctionId = v
}

// GetAsset returns the Asset field value
func (o *AeAssetSellerChargeAddRequestedV2Detail) GetAsset() CommonAmsAssetPointer {
	if o == nil {
		var ret CommonAmsAssetPointer
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *AeAssetSellerChargeAddRequestedV2Detail) GetAssetOk() (*CommonAmsAssetPointer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *AeAssetSellerChargeAddRequestedV2Detail) SetAsset(v CommonAmsAssetPointer) {
	o.Asset = v
}

// GetSeller returns the Seller field value
func (o *AeAssetSellerChargeAddRequestedV2Detail) GetSeller() CommonAmsAccountPointer {
	if o == nil {
		var ret CommonAmsAccountPointer
		return ret
	}

	return o.Seller
}

// GetSellerOk returns a tuple with the Seller field value
// and a boolean to check if the value has been set.
func (o *AeAssetSellerChargeAddRequestedV2Detail) GetSellerOk() (*CommonAmsAccountPointer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Seller, true
}

// SetSeller sets field value
func (o *AeAssetSellerChargeAddRequestedV2Detail) SetSeller(v CommonAmsAccountPointer) {
	o.Seller = v
}

// GetReferenceId returns the ReferenceId field value
func (o *AeAssetSellerChargeAddRequestedV2Detail) GetReferenceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value
// and a boolean to check if the value has been set.
func (o *AeAssetSellerChargeAddRequestedV2Detail) GetReferenceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceId, true
}

// SetReferenceId sets field value
func (o *AeAssetSellerChargeAddRequestedV2Detail) SetReferenceId(v string) {
	o.ReferenceId = v
}

// GetCharge returns the Charge field value
func (o *AeAssetSellerChargeAddRequestedV2Detail) GetCharge() CommonCharge {
	if o == nil {
		var ret CommonCharge
		return ret
	}

	return o.Charge
}

// GetChargeOk returns a tuple with the Charge field value
// and a boolean to check if the value has been set.
func (o *AeAssetSellerChargeAddRequestedV2Detail) GetChargeOk() (*CommonCharge, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Charge, true
}

// SetCharge sets field value
func (o *AeAssetSellerChargeAddRequestedV2Detail) SetCharge(v CommonCharge) {
	o.Charge = v
}

// GetInitiator returns the Initiator field value if set, zero value otherwise.
func (o *AeAssetSellerChargeAddRequestedV2Detail) GetInitiator() CommonInitiator {
	if o == nil || IsNil(o.Initiator) {
		var ret CommonInitiator
		return ret
	}
	return *o.Initiator
}

// GetInitiatorOk returns a tuple with the Initiator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AeAssetSellerChargeAddRequestedV2Detail) GetInitiatorOk() (*CommonInitiator, bool) {
	if o == nil || IsNil(o.Initiator) {
		return nil, false
	}
	return o.Initiator, true
}

// HasInitiator returns a boolean if a field has been set.
func (o *AeAssetSellerChargeAddRequestedV2Detail) HasInitiator() bool {
	if o != nil && !IsNil(o.Initiator) {
		return true
	}

	return false
}

// SetInitiator gets a reference to the given CommonInitiator and assigns it to the Initiator field.
func (o *AeAssetSellerChargeAddRequestedV2Detail) SetInitiator(v CommonInitiator) {
	o.Initiator = &v
}

func (o AeAssetSellerChargeAddRequestedV2Detail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AeAssetSellerChargeAddRequestedV2Detail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["auction-id"] = o.AuctionId
	toSerialize["asset"] = o.Asset
	toSerialize["seller"] = o.Seller
	toSerialize["reference-id"] = o.ReferenceId
	toSerialize["charge"] = o.Charge
	if !IsNil(o.Initiator) {
		toSerialize["initiator"] = o.Initiator
	}
	return toSerialize, nil
}

func (o *AeAssetSellerChargeAddRequestedV2Detail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"auction-id",
		"asset",
		"seller",
		"reference-id",
		"charge",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAeAssetSellerChargeAddRequestedV2Detail := _AeAssetSellerChargeAddRequestedV2Detail{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAeAssetSellerChargeAddRequestedV2Detail)

	if err != nil {
		return err
	}

	*o = AeAssetSellerChargeAddRequestedV2Detail(varAeAssetSellerChargeAddRequestedV2Detail)

	return err
}

type NullableAeAssetSellerChargeAddRequestedV2Detail struct {
	value *AeAssetSellerChargeAddRequestedV2Detail
	isSet bool
}

func (v NullableAeAssetSellerChargeAddRequestedV2Detail) Get() *AeAssetSellerChargeAddRequestedV2Detail {
	return v.value
}

func (v *NullableAeAssetSellerChargeAddRequestedV2Detail) Set(val *AeAssetSellerChargeAddRequestedV2Detail) {
	v.value = val
	v.isSet = true
}

func (v NullableAeAssetSellerChargeAddRequestedV2Detail) IsSet() bool {
	return v.isSet
}

func (v *NullableAeAssetSellerChargeAddRequestedV2Detail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAeAssetSellerChargeAddRequestedV2Detail(val *AeAssetSellerChargeAddRequestedV2Detail) *NullableAeAssetSellerChargeAddRequestedV2Detail {
	return &NullableAeAssetSellerChargeAddRequestedV2Detail{value: val, isSet: true}
}

func (v NullableAeAssetSellerChargeAddRequestedV2Detail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAeAssetSellerChargeAddRequestedV2Detail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


