/*
Edge Event Schemas

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the AeAssetNegotiationUpsertedDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AeAssetNegotiationUpsertedDetail{}

// AeAssetNegotiationUpsertedDetail Event emitted by negotiation service when a negotiation is upserted.
type AeAssetNegotiationUpsertedDetail struct {
	// Auction Edge unique identifier for an auction.
	AuctionId string `json:"auction-id"`
	// Uniquie identifier for a specific negotiation.
	Id string `json:"id"`
	Asset CommonAmsAssetPointer `json:"asset"`
	Conditions AeAssetNegotiationUpsertedDetailConditions `json:"conditions"`
	InitialFloorAmount *CommonCurrency `json:"initial-floor-amount,omitempty"`
	OpenedAt time.Time `json:"opened-at"`
	ClosedAt NullableTime `json:"closed-at"`
	Successful NullableBool `json:"successful"`
	FailureReason *string `json:"failure-reason,omitempty"`
	BallControl string `json:"ball-control"`
	Initiator *CommonInitiator `json:"initiator,omitempty"`
}

type _AeAssetNegotiationUpsertedDetail AeAssetNegotiationUpsertedDetail

// NewAeAssetNegotiationUpsertedDetail instantiates a new AeAssetNegotiationUpsertedDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAeAssetNegotiationUpsertedDetail(auctionId string, id string, asset CommonAmsAssetPointer, conditions AeAssetNegotiationUpsertedDetailConditions, openedAt time.Time, closedAt NullableTime, successful NullableBool, ballControl string) *AeAssetNegotiationUpsertedDetail {
	this := AeAssetNegotiationUpsertedDetail{}
	this.AuctionId = auctionId
	this.Id = id
	this.Asset = asset
	this.Conditions = conditions
	this.OpenedAt = openedAt
	this.ClosedAt = closedAt
	this.Successful = successful
	this.BallControl = ballControl
	return &this
}

// NewAeAssetNegotiationUpsertedDetailWithDefaults instantiates a new AeAssetNegotiationUpsertedDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAeAssetNegotiationUpsertedDetailWithDefaults() *AeAssetNegotiationUpsertedDetail {
	this := AeAssetNegotiationUpsertedDetail{}
	return &this
}

// GetAuctionId returns the AuctionId field value
func (o *AeAssetNegotiationUpsertedDetail) GetAuctionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuctionId
}

// GetAuctionIdOk returns a tuple with the AuctionId field value
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationUpsertedDetail) GetAuctionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuctionId, true
}

// SetAuctionId sets field value
func (o *AeAssetNegotiationUpsertedDetail) SetAuctionId(v string) {
	o.AuctionId = v
}

// GetId returns the Id field value
func (o *AeAssetNegotiationUpsertedDetail) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationUpsertedDetail) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AeAssetNegotiationUpsertedDetail) SetId(v string) {
	o.Id = v
}

// GetAsset returns the Asset field value
func (o *AeAssetNegotiationUpsertedDetail) GetAsset() CommonAmsAssetPointer {
	if o == nil {
		var ret CommonAmsAssetPointer
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationUpsertedDetail) GetAssetOk() (*CommonAmsAssetPointer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *AeAssetNegotiationUpsertedDetail) SetAsset(v CommonAmsAssetPointer) {
	o.Asset = v
}

// GetConditions returns the Conditions field value
func (o *AeAssetNegotiationUpsertedDetail) GetConditions() AeAssetNegotiationUpsertedDetailConditions {
	if o == nil {
		var ret AeAssetNegotiationUpsertedDetailConditions
		return ret
	}

	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationUpsertedDetail) GetConditionsOk() (*AeAssetNegotiationUpsertedDetailConditions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Conditions, true
}

// SetConditions sets field value
func (o *AeAssetNegotiationUpsertedDetail) SetConditions(v AeAssetNegotiationUpsertedDetailConditions) {
	o.Conditions = v
}

// GetInitialFloorAmount returns the InitialFloorAmount field value if set, zero value otherwise.
func (o *AeAssetNegotiationUpsertedDetail) GetInitialFloorAmount() CommonCurrency {
	if o == nil || IsNil(o.InitialFloorAmount) {
		var ret CommonCurrency
		return ret
	}
	return *o.InitialFloorAmount
}

// GetInitialFloorAmountOk returns a tuple with the InitialFloorAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationUpsertedDetail) GetInitialFloorAmountOk() (*CommonCurrency, bool) {
	if o == nil || IsNil(o.InitialFloorAmount) {
		return nil, false
	}
	return o.InitialFloorAmount, true
}

// HasInitialFloorAmount returns a boolean if a field has been set.
func (o *AeAssetNegotiationUpsertedDetail) HasInitialFloorAmount() bool {
	if o != nil && !IsNil(o.InitialFloorAmount) {
		return true
	}

	return false
}

// SetInitialFloorAmount gets a reference to the given CommonCurrency and assigns it to the InitialFloorAmount field.
func (o *AeAssetNegotiationUpsertedDetail) SetInitialFloorAmount(v CommonCurrency) {
	o.InitialFloorAmount = &v
}

// GetOpenedAt returns the OpenedAt field value
func (o *AeAssetNegotiationUpsertedDetail) GetOpenedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.OpenedAt
}

// GetOpenedAtOk returns a tuple with the OpenedAt field value
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationUpsertedDetail) GetOpenedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OpenedAt, true
}

// SetOpenedAt sets field value
func (o *AeAssetNegotiationUpsertedDetail) SetOpenedAt(v time.Time) {
	o.OpenedAt = v
}

// GetClosedAt returns the ClosedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *AeAssetNegotiationUpsertedDetail) GetClosedAt() time.Time {
	if o == nil || o.ClosedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.ClosedAt.Get()
}

// GetClosedAtOk returns a tuple with the ClosedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AeAssetNegotiationUpsertedDetail) GetClosedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClosedAt.Get(), o.ClosedAt.IsSet()
}

// SetClosedAt sets field value
func (o *AeAssetNegotiationUpsertedDetail) SetClosedAt(v time.Time) {
	o.ClosedAt.Set(&v)
}

// GetSuccessful returns the Successful field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *AeAssetNegotiationUpsertedDetail) GetSuccessful() bool {
	if o == nil || o.Successful.Get() == nil {
		var ret bool
		return ret
	}

	return *o.Successful.Get()
}

// GetSuccessfulOk returns a tuple with the Successful field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AeAssetNegotiationUpsertedDetail) GetSuccessfulOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Successful.Get(), o.Successful.IsSet()
}

// SetSuccessful sets field value
func (o *AeAssetNegotiationUpsertedDetail) SetSuccessful(v bool) {
	o.Successful.Set(&v)
}

// GetFailureReason returns the FailureReason field value if set, zero value otherwise.
func (o *AeAssetNegotiationUpsertedDetail) GetFailureReason() string {
	if o == nil || IsNil(o.FailureReason) {
		var ret string
		return ret
	}
	return *o.FailureReason
}

// GetFailureReasonOk returns a tuple with the FailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationUpsertedDetail) GetFailureReasonOk() (*string, bool) {
	if o == nil || IsNil(o.FailureReason) {
		return nil, false
	}
	return o.FailureReason, true
}

// HasFailureReason returns a boolean if a field has been set.
func (o *AeAssetNegotiationUpsertedDetail) HasFailureReason() bool {
	if o != nil && !IsNil(o.FailureReason) {
		return true
	}

	return false
}

// SetFailureReason gets a reference to the given string and assigns it to the FailureReason field.
func (o *AeAssetNegotiationUpsertedDetail) SetFailureReason(v string) {
	o.FailureReason = &v
}

// GetBallControl returns the BallControl field value
func (o *AeAssetNegotiationUpsertedDetail) GetBallControl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BallControl
}

// GetBallControlOk returns a tuple with the BallControl field value
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationUpsertedDetail) GetBallControlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BallControl, true
}

// SetBallControl sets field value
func (o *AeAssetNegotiationUpsertedDetail) SetBallControl(v string) {
	o.BallControl = v
}

// GetInitiator returns the Initiator field value if set, zero value otherwise.
func (o *AeAssetNegotiationUpsertedDetail) GetInitiator() CommonInitiator {
	if o == nil || IsNil(o.Initiator) {
		var ret CommonInitiator
		return ret
	}
	return *o.Initiator
}

// GetInitiatorOk returns a tuple with the Initiator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AeAssetNegotiationUpsertedDetail) GetInitiatorOk() (*CommonInitiator, bool) {
	if o == nil || IsNil(o.Initiator) {
		return nil, false
	}
	return o.Initiator, true
}

// HasInitiator returns a boolean if a field has been set.
func (o *AeAssetNegotiationUpsertedDetail) HasInitiator() bool {
	if o != nil && !IsNil(o.Initiator) {
		return true
	}

	return false
}

// SetInitiator gets a reference to the given CommonInitiator and assigns it to the Initiator field.
func (o *AeAssetNegotiationUpsertedDetail) SetInitiator(v CommonInitiator) {
	o.Initiator = &v
}

func (o AeAssetNegotiationUpsertedDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AeAssetNegotiationUpsertedDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["auction-id"] = o.AuctionId
	toSerialize["id"] = o.Id
	toSerialize["asset"] = o.Asset
	toSerialize["conditions"] = o.Conditions
	if !IsNil(o.InitialFloorAmount) {
		toSerialize["initial-floor-amount"] = o.InitialFloorAmount
	}
	toSerialize["opened-at"] = o.OpenedAt
	toSerialize["closed-at"] = o.ClosedAt.Get()
	toSerialize["successful"] = o.Successful.Get()
	if !IsNil(o.FailureReason) {
		toSerialize["failure-reason"] = o.FailureReason
	}
	toSerialize["ball-control"] = o.BallControl
	if !IsNil(o.Initiator) {
		toSerialize["initiator"] = o.Initiator
	}
	return toSerialize, nil
}

func (o *AeAssetNegotiationUpsertedDetail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"auction-id",
		"id",
		"asset",
		"conditions",
		"opened-at",
		"closed-at",
		"successful",
		"ball-control",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAeAssetNegotiationUpsertedDetail := _AeAssetNegotiationUpsertedDetail{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAeAssetNegotiationUpsertedDetail)

	if err != nil {
		return err
	}

	*o = AeAssetNegotiationUpsertedDetail(varAeAssetNegotiationUpsertedDetail)

	return err
}

type NullableAeAssetNegotiationUpsertedDetail struct {
	value *AeAssetNegotiationUpsertedDetail
	isSet bool
}

func (v NullableAeAssetNegotiationUpsertedDetail) Get() *AeAssetNegotiationUpsertedDetail {
	return v.value
}

func (v *NullableAeAssetNegotiationUpsertedDetail) Set(val *AeAssetNegotiationUpsertedDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableAeAssetNegotiationUpsertedDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableAeAssetNegotiationUpsertedDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAeAssetNegotiationUpsertedDetail(val *AeAssetNegotiationUpsertedDetail) *NullableAeAssetNegotiationUpsertedDetail {
	return &NullableAeAssetNegotiationUpsertedDetail{value: val, isSet: true}
}

func (v NullableAeAssetNegotiationUpsertedDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAeAssetNegotiationUpsertedDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


