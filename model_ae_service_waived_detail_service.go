/*
Edge Event Schemas

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
	"fmt"
)

// checks if the AeServiceWaivedDetailService type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AeServiceWaivedDetailService{}

// AeServiceWaivedDetailService struct for AeServiceWaivedDetailService
type AeServiceWaivedDetailService struct {
	Class ServiceClassEnum `json:"class"`
	// Service code
	Code *string `json:"code,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AeServiceWaivedDetailService AeServiceWaivedDetailService

// NewAeServiceWaivedDetailService instantiates a new AeServiceWaivedDetailService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAeServiceWaivedDetailService(class ServiceClassEnum) *AeServiceWaivedDetailService {
	this := AeServiceWaivedDetailService{}
	this.Class = class
	return &this
}

// NewAeServiceWaivedDetailServiceWithDefaults instantiates a new AeServiceWaivedDetailService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAeServiceWaivedDetailServiceWithDefaults() *AeServiceWaivedDetailService {
	this := AeServiceWaivedDetailService{}
	return &this
}

// GetClass returns the Class field value
func (o *AeServiceWaivedDetailService) GetClass() ServiceClassEnum {
	if o == nil {
		var ret ServiceClassEnum
		return ret
	}

	return o.Class
}

// GetClassOk returns a tuple with the Class field value
// and a boolean to check if the value has been set.
func (o *AeServiceWaivedDetailService) GetClassOk() (*ServiceClassEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Class, true
}

// SetClass sets field value
func (o *AeServiceWaivedDetailService) SetClass(v ServiceClassEnum) {
	o.Class = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *AeServiceWaivedDetailService) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AeServiceWaivedDetailService) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *AeServiceWaivedDetailService) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *AeServiceWaivedDetailService) SetCode(v string) {
	o.Code = &v
}

func (o AeServiceWaivedDetailService) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AeServiceWaivedDetailService) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["class"] = o.Class
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AeServiceWaivedDetailService) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"class",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAeServiceWaivedDetailService := _AeServiceWaivedDetailService{}

	err = json.Unmarshal(data, &varAeServiceWaivedDetailService)

	if err != nil {
		return err
	}

	*o = AeServiceWaivedDetailService(varAeServiceWaivedDetailService)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "class")
		delete(additionalProperties, "code")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAeServiceWaivedDetailService struct {
	value *AeServiceWaivedDetailService
	isSet bool
}

func (v NullableAeServiceWaivedDetailService) Get() *AeServiceWaivedDetailService {
	return v.value
}

func (v *NullableAeServiceWaivedDetailService) Set(val *AeServiceWaivedDetailService) {
	v.value = val
	v.isSet = true
}

func (v NullableAeServiceWaivedDetailService) IsSet() bool {
	return v.isSet
}

func (v *NullableAeServiceWaivedDetailService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAeServiceWaivedDetailService(val *AeServiceWaivedDetailService) *NullableAeServiceWaivedDetailService {
	return &NullableAeServiceWaivedDetailService{value: val, isSet: true}
}

func (v NullableAeServiceWaivedDetailService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAeServiceWaivedDetailService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


