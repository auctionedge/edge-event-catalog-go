/*
Edge Event Schemas

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
	"fmt"
)

// CommonAssetNegotiationOfferBy the role of the person that made the offer
type CommonAssetNegotiationOfferBy string

// List of common.asset.negotiation.offer.by
const (
	BUYER CommonAssetNegotiationOfferBy = "buyer"
	SELLER CommonAssetNegotiationOfferBy = "seller"
)

// All allowed values of CommonAssetNegotiationOfferBy enum
var AllowedCommonAssetNegotiationOfferByEnumValues = []CommonAssetNegotiationOfferBy{
	"buyer",
	"seller",
}

func (v *CommonAssetNegotiationOfferBy) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CommonAssetNegotiationOfferBy(value)
	for _, existing := range AllowedCommonAssetNegotiationOfferByEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CommonAssetNegotiationOfferBy", value)
}

// NewCommonAssetNegotiationOfferByFromValue returns a pointer to a valid CommonAssetNegotiationOfferBy
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCommonAssetNegotiationOfferByFromValue(v string) (*CommonAssetNegotiationOfferBy, error) {
	ev := CommonAssetNegotiationOfferBy(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CommonAssetNegotiationOfferBy: valid values are %v", v, AllowedCommonAssetNegotiationOfferByEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CommonAssetNegotiationOfferBy) IsValid() bool {
	for _, existing := range AllowedCommonAssetNegotiationOfferByEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to common.asset.negotiation.offer.by value
func (v CommonAssetNegotiationOfferBy) Ptr() *CommonAssetNegotiationOfferBy {
	return &v
}

type NullableCommonAssetNegotiationOfferBy struct {
	value *CommonAssetNegotiationOfferBy
	isSet bool
}

func (v NullableCommonAssetNegotiationOfferBy) Get() *CommonAssetNegotiationOfferBy {
	return v.value
}

func (v *NullableCommonAssetNegotiationOfferBy) Set(val *CommonAssetNegotiationOfferBy) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonAssetNegotiationOfferBy) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonAssetNegotiationOfferBy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonAssetNegotiationOfferBy(val *CommonAssetNegotiationOfferBy) *NullableCommonAssetNegotiationOfferBy {
	return &NullableCommonAssetNegotiationOfferBy{value: val, isSet: true}
}

func (v NullableCommonAssetNegotiationOfferBy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonAssetNegotiationOfferBy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

