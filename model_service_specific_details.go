/*
Edge Event Schemas

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events

import (
	"encoding/json"
)

// checks if the ServiceSpecificDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceSpecificDetails{}

// ServiceSpecificDetails struct for ServiceSpecificDetails
type ServiceSpecificDetails struct {
	// The number of days available to be returned.
	ReturnableWithinDays *int32 `json:"returnable-within-days,omitempty"`
	PricePass *CommonCurrency `json:"price-pass,omitempty"`
	PriceFail *CommonCurrency `json:"price-fail,omitempty"`
}

// NewServiceSpecificDetails instantiates a new ServiceSpecificDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceSpecificDetails() *ServiceSpecificDetails {
	this := ServiceSpecificDetails{}
	return &this
}

// NewServiceSpecificDetailsWithDefaults instantiates a new ServiceSpecificDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceSpecificDetailsWithDefaults() *ServiceSpecificDetails {
	this := ServiceSpecificDetails{}
	return &this
}

// GetReturnableWithinDays returns the ReturnableWithinDays field value if set, zero value otherwise.
func (o *ServiceSpecificDetails) GetReturnableWithinDays() int32 {
	if o == nil || IsNil(o.ReturnableWithinDays) {
		var ret int32
		return ret
	}
	return *o.ReturnableWithinDays
}

// GetReturnableWithinDaysOk returns a tuple with the ReturnableWithinDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSpecificDetails) GetReturnableWithinDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.ReturnableWithinDays) {
		return nil, false
	}
	return o.ReturnableWithinDays, true
}

// HasReturnableWithinDays returns a boolean if a field has been set.
func (o *ServiceSpecificDetails) HasReturnableWithinDays() bool {
	if o != nil && !IsNil(o.ReturnableWithinDays) {
		return true
	}

	return false
}

// SetReturnableWithinDays gets a reference to the given int32 and assigns it to the ReturnableWithinDays field.
func (o *ServiceSpecificDetails) SetReturnableWithinDays(v int32) {
	o.ReturnableWithinDays = &v
}

// GetPricePass returns the PricePass field value if set, zero value otherwise.
func (o *ServiceSpecificDetails) GetPricePass() CommonCurrency {
	if o == nil || IsNil(o.PricePass) {
		var ret CommonCurrency
		return ret
	}
	return *o.PricePass
}

// GetPricePassOk returns a tuple with the PricePass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSpecificDetails) GetPricePassOk() (*CommonCurrency, bool) {
	if o == nil || IsNil(o.PricePass) {
		return nil, false
	}
	return o.PricePass, true
}

// HasPricePass returns a boolean if a field has been set.
func (o *ServiceSpecificDetails) HasPricePass() bool {
	if o != nil && !IsNil(o.PricePass) {
		return true
	}

	return false
}

// SetPricePass gets a reference to the given CommonCurrency and assigns it to the PricePass field.
func (o *ServiceSpecificDetails) SetPricePass(v CommonCurrency) {
	o.PricePass = &v
}

// GetPriceFail returns the PriceFail field value if set, zero value otherwise.
func (o *ServiceSpecificDetails) GetPriceFail() CommonCurrency {
	if o == nil || IsNil(o.PriceFail) {
		var ret CommonCurrency
		return ret
	}
	return *o.PriceFail
}

// GetPriceFailOk returns a tuple with the PriceFail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSpecificDetails) GetPriceFailOk() (*CommonCurrency, bool) {
	if o == nil || IsNil(o.PriceFail) {
		return nil, false
	}
	return o.PriceFail, true
}

// HasPriceFail returns a boolean if a field has been set.
func (o *ServiceSpecificDetails) HasPriceFail() bool {
	if o != nil && !IsNil(o.PriceFail) {
		return true
	}

	return false
}

// SetPriceFail gets a reference to the given CommonCurrency and assigns it to the PriceFail field.
func (o *ServiceSpecificDetails) SetPriceFail(v CommonCurrency) {
	o.PriceFail = &v
}

func (o ServiceSpecificDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceSpecificDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReturnableWithinDays) {
		toSerialize["returnable-within-days"] = o.ReturnableWithinDays
	}
	if !IsNil(o.PricePass) {
		toSerialize["price-pass"] = o.PricePass
	}
	if !IsNil(o.PriceFail) {
		toSerialize["price-fail"] = o.PriceFail
	}
	return toSerialize, nil
}

type NullableServiceSpecificDetails struct {
	value *ServiceSpecificDetails
	isSet bool
}

func (v NullableServiceSpecificDetails) Get() *ServiceSpecificDetails {
	return v.value
}

func (v *NullableServiceSpecificDetails) Set(val *ServiceSpecificDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceSpecificDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceSpecificDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceSpecificDetails(val *ServiceSpecificDetails) *NullableServiceSpecificDetails {
	return &NullableServiceSpecificDetails{value: val, isSet: true}
}

func (v NullableServiceSpecificDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceSpecificDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


